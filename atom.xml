<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://okckd.github.io/atom.xml" rel="self"/>
  <link href="http://okckd.github.io/"/>
  <updated>2014-08-04T00:45:23+08:00</updated>
  <id>http://okckd.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[General] Multilayered Architecture]]></title>
    <link href="http://okckd.github.io/blog/2014/08/03/Multilayered-architecture/"/>
    <updated>2014-08-03T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/03/Multilayered-architecture</id>
    <content type="html"><![CDATA[<h3>First Word</h3>

<p>A <a href="http://en.wikipedia.org/wiki/Multilayered_architecture">multilayered software architecture</a> is a software architecture that uses many layers for allocating the different responsibilities of a software product.</p>

<h3>Layers</h3>

<ol>
<li><strong>Presentation layer</strong>

<ol type="a">
<li>UI layer, view layer</li>
<li>presentation tier in multitier architecture</li>
</ol>
</li>
<li><strong>Application layer</strong>

<ol type="a">
<li>also called service layer/GRASP Controller Layer</li>
</ol>
</li>
<li><strong>Business layer</strong>

<ol type="a">
<li>also called business logic layer/domain layer</li>
</ol>
</li>
<li>Infrastructure layer

<ol>
<li>data access layer/<strong>persistence layer</strong></li>
<li>logging, networking, and other services which are required to support a particular business layer</li>
</ol>
</li>
</ol>


<h3>Conventions</h3>

<p><strong>Application layer</strong> (or service layer) is sometimes considered a sublayer of <strong>business layer</strong>.</p>

<p>If there&rsquo;s no explicit distinction between first 3 tiers, then it&rsquo;s a <strong>traditional client-server(two-tier) model</strong>.</p>

<p>The <strong>application/business layers</strong> can, in fact, be further subdivided to emphasize distinct responsibility (eg. MVC).</p>

<p>Sometimes there&rsquo;s <strong>business infrastructure layer(BI)</strong>, located between the business layer and infrastructure layer.</p>

<p>Infrastructure layer can be partitioned into different levels (high-level or low-level). <strong>Developers focus on only the persistence capabilities</strong>, therefore only talk about persistence layer or data access layer.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Design Solar System]]></title>
    <link href="http://okckd.github.io/blog/2014/08/03/Design-Solar-System/"/>
    <updated>2014-08-03T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/03/Design-Solar-System</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.careercup.com/question?id=14761735">link</a></p>

<blockquote><p>Design a web application to represent hierarchy of solar system.</p>

<p>Give details of Persistence layer, business layer, presentation layer and Client-server protocol.</p></blockquote>

<h3>Solution</h3>

<p><strong>First, OOD part</strong> is very well covered in <a href="http://www.ehow.com/how_5579338_build-own-solar-system-java.html">this site</a>. There&rsquo;re 2 abstract class: <strong>OrbitalSystem</strong>, where &lsquo;Star/Sun&rsquo; is an instance, and <strong>GravityObject</strong>, where &lsquo;Planet/Earch&rsquo; is an instance. Though this does not take satellite into consideration.</p>

<p><strong>Second, the multi-layer structure</strong>. It&rsquo;s cover in another post <strong><a href="http://okckd.github.io/blog/2014/08/03/Multilayered-architecture/">Multilayered architecture</a></strong></p>

<p><strong>Third, the protocol</strong>. We <a href="http://stackoverflow.com/a/4279218">use HTTP protocol</a>, because:</p>

<blockquote><p>HTTP(S) is the best protocol to use. The overhead (i.e. headers) is pretty small, the transfer can be gzipped, the connection can be secured (via SSL). Also, ports 80 (HTTP) and 443 (HTTPS) will be open in 99% of cases. Other ports are not &mdash; for example some carriers block all other ports unless you pay extra.</p></blockquote>

<p>More info on HTTP communication comes later.</p>

<h3>Code</h3>

<p>from <a href="http://www.ehow.com/how_5579338_build-own-solar-system-java.html">here</a></p>

<pre><code>public abstract class GravityObject {
    double xPosition;
    double yPosition;
    double degreeInOrbit;
    double distanceFromParent;

    GravityObject() {
    this.distance = 0;
    }

    GravityObject(double distance) {
    this.distance = distance;
    }
}

import java.util.ArrayList;

public abstract class OrbitalSystem extends GravityObject {
    private ArrayList children = new ArrayList(); // Objects within the system. They will orbit the parent.

    public void add(GravityObject child) { children.add(child); }

    public void tick() {
        for (int x = 0; x &lt; children.size(); x++) {
            GravityObject current = children.get(x);
            current.degree += 1
            current.xPosition = this.xPosition + Math.cos(degree/180 * Math.PI)* current.distance;
            current.yPosition = this.yPosition - Math.sin(degree/180 * Math.PI) * current.distance;
        }
    }
}

public class Star extends OrbitalSystem { 

};

public class Planet extends GravityObject { 

};

public static int main(String[] args) {
    Star s = new Star(); // Create a new star.
    s.add(new Planet(20)); // Add a planet to the star's orbital system which orbits at a distance of 20 units.
    s.add(new Planet(66)); // Add another planet to the star's orbital system which orbits at a distance of 66 units.

    while (true) {
        s.tick();
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Data Structure for 3 Keys]]></title>
    <link href="http://okckd.github.io/blog/2014/08/03/Data-Structure-3-Keys/"/>
    <updated>2014-08-03T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/03/Data-Structure-3-Keys</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.careercup.com/question?id=5763793837621248">link</a></p>

<blockquote><p>Give efficient implementation of the following problem.</p>

<p>An item consist of different keys say k1, k2, k3. User can insert any number of items in database, search for item using <strong>any (one) key</strong>, delete it using any key and iterate through all the items in sorted order <strong>using any key</strong>. Give the most efficient way such that it supports insertion, search based on a key, iteration and deletion.</p></blockquote>

<h3>Solution</h3>

<p>There&rsquo;re 3 keys, so we need 3 maps to store search map for 3 types of keys. For example, the DS is like this:</p>

<blockquote><p>(date, name, country) &ndash;> ItemObject</p></blockquote>

<p>Then we would have:</p>

<blockquote><p>date &ndash;> a list of ItemObject</p>

<p>name &ndash;> a list of ItemObject</p>

<p>country &ndash;> a list of ItemObject</p></blockquote>

<p>Since we need to iterate in order, we choose TreeMap over HashMap.</p>

<p>For scalability purpose, we use another HashMap&lt;KeyType, TreeMap> and put 3 items in.</p>

<h3>Final Data Structure</h3>

<p>3 DS needed. <a href="http://www.careercup.com/question?id=5763793837621248">source</a></p>

<ol>
<li>ArrayList<ItemObject> list;</li>
<li>TreeMap&lt;KeyValue, List<ItemObject>> index;</li>
<li>HashMap&lt;KeyType, TreeMap&lt;KeyValue, List<ItemObject>>> mapOfIndexes;</li>
</ol>


<h4>Method add(item): void</h4>

<ol>
<li>add item in ArrayList.</li>
<li>For each key, get TreeMap from HashMap and add into TreeMap.</li>
</ol>


<h4>Method search(key): List<Item></h4>

<ol>
<li>Get TreeMap from HashMap for provided key.</li>
<li>Search the TreeMap</li>
<li>Return List Of Items</li>
</ol>


<h4>Method delete(key): List<Item></h4>

<ol>
<li>Using search method get List Of item</li>
<li>Delete items from ArrayList and <strong>also delete its mapping from all (3) TreeMap</strong></li>
</ol>


<h4>Method orderedIterator(keytype): Iterator</h4>

<ol>
<li>Get TreeMap from HashMap for provided key</li>
<li>Get EntrySet from TreeMap</li>
<li>Return EntrySet.iterator();</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CC150] 17.1 How Web Works]]></title>
    <link href="http://okckd.github.io/blog/2014/08/03/17-1-How-Web-Works/"/>
    <updated>2014-08-03T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/03/17-1-How-Web-Works</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p>17.1 Explain what happens, step by step, after you type a URL into a browser Use as much detail as possible.</p>

<h3>Short Answer</h3>

<ol>
<li>Browser contacts the DNS server to find the IP address of URL</li>
<li>DNS returns back the IP address of the site</li>
<li>Browser opens TCP connection to the web server at port 80</li>
<li>The browser sends a GET request to the server, asking for the file</li>
<li>Browser fetches the html code</li>
<li>Browser renders the HTML in the display window</li>
<li>Browser terminates the connection when window is closed</li>
</ol>


<p><a href="http://superuser.com/q/157408">ref</a></p>

<h3>More Details</h3>

<p>Phase 1:</p>

<ol>
<li>browser checks cache; if requested object is in cache and is fresh, skip to Phase 3 #4</li>
<li>browser asks OS for server&rsquo;s IP address</li>
<li>OS makes a DNS lookup and replies the IP address to the browser</li>
<li>browser opens a TCP connection to server (this step is much more complex with HTTPS)</li>
<li>browser sends the HTTP request through TCP connection</li>
</ol>


<p><a href="http://stackoverflow.com/a/2092602">ref</a></p>

<p>Phase 2:</p>

<ol>
<li>That computer receives the HTTP request from the TCP/IP connection and passes it to the web server program.</li>
<li>Web server reads the hostname and path and finds or generates the data that you&rsquo;ve asked for.</li>
<li>Web server generates an HTTP response containing that data.</li>
<li>Web server sends that HTTP response back down the TCP/IP connection to your machine.</li>
</ol>


<p><a href="http://superuser.com/a/31474">ref</a></p>

<p>Phase 3:</p>

<ol>
<li>browser receives HTTP response and may close the TCP connection, or reuse it for another request</li>
<li>browser checks if the response is a redirect (3xx result status codes), authorization request (401), error (4xx and 5xx), etc.; these are handled differently from normal responses (2xx)</li>
<li>if cacheable, response is stored in cache</li>
<li>browser decodes response (e.g. if it&rsquo;s gzipped)</li>
<li>browser determines what to do with response (e.g. is it a HTML page, is it an image, is it a sound clip?)</li>
<li>browser renders response, or offers a download dialog for unrecognized types</li>
</ol>


<h3>Miscellaneous:</h3>

<p>Each domain name server is divided into zones A single server may only be responsible for knowing the host names and IP addresses for a small subset of a zone, but DNS servers can work together to map all domain names to their IP addresses That means if one domain name server is unable to find the IP addresses of a requested domain then it requests the information from other domain name servers</p>

<p>The firewall will control connections to &amp; from your computer. For the most part it will just be controlling who can connect to your computer and on what ports. For web browsing your firewall generally won&rsquo;t be doing a whole lot.</p>

<p>Your router essentially guides your request through the network, helping the packets get from computer to computer and potentially doing some NAT (Network Address Tranlator) to translate IP addresses along the way (so your internat LAN request can be transitioned onto the wider internet and back).</p>

<h3>Even more</h3>

<p>An even more detailed article can be found <a href="http://www.garshol.priv.no/download/text/http-tut.html">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Winner of Tic-tac-toe]]></title>
    <link href="http://okckd.github.io/blog/2014/08/02/Winner-tic-tac-toe/"/>
    <updated>2014-08-02T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/02/Winner-tic-tac-toe</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.glassdoor.com/Interview/How-would-you-determine-if-someone-has-won-a-game-of-tic-tac-toe-on-a-board-of-any-size-QTN_1104.htm">link</a></p>

<blockquote><p>How would you determine if someone has won a game of tic-tac-toe on a board of any size?</p></blockquote>

<h3>Solution</h3>

<p>First, confirm that when the number of pieces in a line equals to the dimension of the board, one person wins. Eg. for 10 * 10 board, 10 pieces need to be in 1 line.</p>

<p>__<a href="http://www.glassdoor.com/Interview/How-would-you-determine-if-someone-has-won-a-game-of-tic-tac-toe-on-a-board-of-any-size-QTN_1104.htm">We can determine</a> if someone has won during a game in real time, as in checking after every move.</p>

<blockquote><p>Create an array of size 2n+2 at the beginning of the game and fill it with zeros. Each spot in the array will be a sum of X&rsquo;s or O&rsquo;s horizontally (the first n places in the array), vertically (the second n places in the array) and diagonally (the last 2 places). Then with every move, you add 1 to the 2 places (or 3 if on a diagnol) of the array if X, and subtract 1 if its an O. After adding you check and see if the value of the array is equal to n or -n, if it is, n mean X has won and -n means O has won.</p></blockquote>

<h3>Code</h3>

<p><strong>not written</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Special Increasing Adjacent Sequence]]></title>
    <link href="http://okckd.github.io/blog/2014/08/02/Special-increasing-adjacent-sequence/"/>
    <updated>2014-08-02T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/02/Special-increasing-adjacent-sequence</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.careercup.com/question?id=5147801809846272">link</a></p>

<blockquote><p>Given a NxN matrix which contains all distinct 1 to n<sup>2</sup> numbers, write code to print sequence of increasing adjacent sequential numbers.</p></blockquote>

<pre><code>ex: 
1 5 9 
2 3 8 
4 6 7 
</code></pre>

<blockquote><p>should print: 6 7 8 9</p></blockquote>

<h3>Solution</h3>

<blockquote><p>Make an array of booleans (or bits) of same size as the input, where arr[i-1] indicates whether i is adjacent to i+1. Then, iterate over the matrix, checking for each cell the four neighbors and populating the relevant entry in the boolean array.</p></blockquote>

<p>Last, look for the longest run of &ldquo;true&rdquo; values in the boolean array, which can be done with one pass. O(n) time.</p>

<p><strong>Note that this algorithm is valid only if input integers are distinct</strong>, which is true here.</p>

<h3>Code</h3>

<p><strong>not written</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Print String Comparison Order]]></title>
    <link href="http://okckd.github.io/blog/2014/08/02/Print-string-comparison-order/"/>
    <updated>2014-08-02T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/02/Print-string-comparison-order</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.careercup.com/question?id=5680043955060736">link</a></p>

<blockquote><p>Output top N positive integer in string comparison order. For example, let&rsquo;s say N=1000, then you need to output in string comparison order as below:</p>

<p>1, 10, 100, 1000, 101, 102, &hellip; 109, 11, 110, &hellip; 998, 999.</p></blockquote>

<h3>Solution</h3>

<p>Thought for a while, and realize it&rsquo;s stanard DFS.</p>

<h3>Code</h3>

<p><strong>written by me</strong></p>

<pre><code>public static void main(String args[]) {
    for (int i = 1; i &lt; 10; i++) {
        dfs("" + i);
    }
}

public static void dfs(String path) {
    if (Integer.parseInt(path) &gt; 1000) {
        return;
    }
    System.out.println(path);
    for (int i = 0; i &lt; 10; i++) {
        dfs(path + i);
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Collection] G Question List]]></title>
    <link href="http://okckd.github.io/blog/2014/08/02/G-Question-List/"/>
    <updated>2014-08-02T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/02/G-Question-List</id>
    <content type="html"><![CDATA[<h3>Question List</h3>

<ol>
<li><p><a href="http://okckd.github.io/blog/2014/05/01/Longest-Common-Prefix/">Longest Common Prefix</a></p></li>
<li><p><a href="http://okckd.github.io/blog/2014/05/14/Multiply-Strings/">Multiply Strings </a></p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Shuffle a Given Array]]></title>
    <link href="http://okckd.github.io/blog/2014/08/01/Shuffle-an-array/"/>
    <updated>2014-08-01T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/01/Shuffle-an-array</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.geeksforgeeks.org/shuffle-a-given-array/">link</a></p>

<blockquote><p>Given an array, generate a random permutation of array elements.</p></blockquote>

<h3>Analysis</h3>

<p>This is called <strong><a href="http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle">Fisher–Yates shuffle</a></strong>. Proof can be seen at question post:</p>

<blockquote><p>The probability that ith element goes to second last position can be proved to be 1/n by dividing it in two cases.</p>

<p>Case 1: i = n-1 (index of last element):</p>

<p>The probability of last element going to second last position is = (probability that last element doesn&rsquo;t stay at its original position) x (probability that the index picked in previous step is picked again so that the last element is swapped)</p>

<p>So the probability = ((n-1)/n) x (1/(n-1)) = 1/n</p>

<p>Case 2: 0 &lt; i &lt; n-1 (index of non-last):</p>

<p>The probability of ith element going to second position = (probability that ith element is not picked in previous iteration) x (probability that ith element is picked in this iteration)</p>

<p>So the probability = ((n-1)/n) x (1/(n-1)) = 1/n</p>

<p>We can easily generalize above proof for any other position.</p></blockquote>

<h3>Solution</h3>

<p>O(n) time complexity.</p>

<pre><code>To shuffle an array a of n elements (indices 0..n-1):
  for i from n − 1 downto 1 do
       j ← random integer with 0 ≤ j ≤ i
       exchange a[j] and a[i]
</code></pre>

<p>Note the RNG is having limit from 0 to i, and number i keeps decreasing.</p>

<h3>Code</h3>

<p><strong>not written by me</strong></p>

<pre><code>def sattoloCycle(items):
    i = len(items)
    while i &gt; 1:
        i = i - 1
        j = randrange(i)  # 0 &lt;= j &lt;= i-1
        items[j], items[i] = items[i], items[j]
    return
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[General] Overriding Private Method]]></title>
    <link href="http://okckd.github.io/blog/2014/08/01/Overriding-private-method/"/>
    <updated>2014-08-01T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/01/Overriding-private-method</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://stackoverflow.com/questions/2000137/overriding-private-methods-in-java">link</a></p>

<blockquote><p>Can we overriding private method in Java?</p></blockquote>

<h3>Analysis</h3>

<blockquote><p>Overriding private methods in Java is invalid because a parent class&rsquo;s private methods are &ldquo;automatically final, and hidden from the derived class&rdquo;.  <a href="http://www.linuxtopia.org/online_books/programming_books/thinking_in_java/TIJ309_006.htm">source</a></p></blockquote>

<h3>Solution</h3>

<p>You can&rsquo;t override a private method, but you can introduce one in a derived class <a href="http://stackoverflow.com/a/2000156">without a problem</a>. Read more below.</p>

<h3>Code</h3>

<p><strong>not a problem</strong></p>

<pre><code>public class OverridePrivateMethod {
    private void foo() {
    }
}

class Child extends OverridePrivateMethod {
    private void foo() {
    }
}
</code></pre>

<p><strong>add @Override annotation and get error</strong></p>

<pre><code>public class OverridePrivateMethod {
    private void foo() {
    }
}

class Child extends OverridePrivateMethod {
    @Override
    private void foo() {
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Max Sum in a 2D Array]]></title>
    <link href="http://okckd.github.io/blog/2014/08/01/Max-Sum-In-2D-Array/"/>
    <updated>2014-08-01T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/01/Max-Sum-In-2D-Array</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://tech-queries.blogspot.sg/2010/05/find-max-sum-in-2d-array.html">link</a></p>

<blockquote><p>Given a 2D array, find the maximum sum subarray in it. For example, in the following 2D array, the maximum sum subarray is highlighted with blue rectangle and sum of this subarray is 29.</p></blockquote>

<p><img class="middle" src="http://okckd.github.io/assets/images/max-sum-2d-matrix.png"></p>

<h3>Analysis</h3>

<p>Try convert this question to &ldquo;<strong>max sum in 1D array</strong>&rdquo; by sum up all numbers in the same column. (we know that in 1D array, the algo runs O(n) time)</p>

<p>There&rsquo;s in total O(n<sup>2</sup>) combinations of ways to sum up a column. So the <strong>total time complexity is O(n<sup>3</sup>)</strong>.</p>

<h3>Solution</h3>

<ol>
<li><p>Traverse matrix at row level.</p></li>
<li><p>have a temporary 1-D array and initialize all members as 0.</p></li>
<li><p>For each row do following</p>

<ol>
<li>add value in temporary array for all rows below current row</li>
<li>apply 1-D kadane on temporary array</li>
<li>if your current result is greater than current maximum sum, update.</li>
</ol>
</li>
</ol>


<h3>Code</h3>

<p><strong>written by me</strong></p>

<pre><code>public int maxSum(int[][] A) {
    int m = A.length;
    int n = A[0].length;
    int maxResult = Integer.MIN_VALUE;
    for (int i = 0; i &lt; m; i++) {
        int[] temp = new int[n];
        for (int j = i; j &lt; m; j++) {
            // from row#i to row#(m-1), add the number into temp[]
            for (int k = 0; k &lt; n; k++) {
                temp[k] += A[j][k];
            }
            // find max sum for 1D array
            maxResult = Math.max(maxResult, maxSum(temp));
        }
    }
    return maxResult;
}

private int maxSum(int[] B) {
    int sumSoFar = 0;
    int maxSum = Integer.MIN_VALUE;
    for (int i = 0; i &lt; B.length; i++) {
        maxSum = Math.max(maxSum, sumSoFar + B[i]);
        sumSoFar = Math.max(0, sumSoFar + B[i]);
    }
    return maxSum;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Arranging Sequence]]></title>
    <link href="http://okckd.github.io/blog/2014/08/01/Arranging-Sequence/"/>
    <updated>2014-08-01T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/01/Arranging-Sequence</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://tech-queries.blogspot.sg/2008/11/arranging-sequence.html">link</a></p>

<blockquote><p>We have an array of 2n elements like &ldquo;a1 a2&hellip;an b1 b2&hellip;bn&rdquo;. WAP to rearrange the array as &ldquo;a1 b1 a2 b2&hellip;an bn&rdquo;</p>

<p>time complexity is O(n) no extra array or memory can be taken.</p>

<p>Input : 1 2 3 4 5 6 7 8 9 10 11 12 (even number input)</p>

<p>Output: 1 7 2 8 3 9 4 10 5 11 6 12</p>

<p>Input : 1 2 3 4 5 6 7 (odd number input)</p>

<p>Output: 1 5 2 6 3 7 4</p></blockquote>

<h3>Analysis</h3>

<p>This is a difficult question.</p>

<p>I did not find enough resources online, but have come up with 2 solutions.</p>

<h3>Solution</h3>

<p><strong>First is like bubble sort (read it somewhere before)</strong>. Always swap in pairs (starting from the middle):</p>

<pre><code>1st: 1 2 3 4 5 6 7
2nd: 1 2 3 5 4 6 7
3rd: 1 2 5 3 6 4 7
4th: 1 5 2 6 3 7 4
done
</code></pre>

<p><strong>Second solution is to swap in cycles (put current value in its &lsquo;successor&rsquo; position, and continue from there)</strong>. But in order to identify cycles, additional space is used. I wrote the code (which make use of &lsquo;visited&rsquo; array) is listed below. the time complexity is between O(n) and O(n<sup>2</sup>).</p>

<p>More info on this topic can be found on <a href="http://en.wikipedia.org/wiki/In-place_matrix_transposition">wikipedia</a>.</p>

<h3>Code</h3>

<p><strong>written by me</strong></p>

<pre><code>public void rearrange(int[] A) {
    int effLength = A.length;
    if (A.length % 2 == 0) {
        // for even number of input, last element is unchanged
        effLength--;
    }
    // make sure 'effLength' is an odd number.
    int half = effLength / 2 + 1;
    int pos = 1;
    int posValue = A[pos];
    int numSwaps = 0;
    boolean[] visited = new boolean[effLength];
    // visited is used as flag to avoid repeat swap
    // eg. when input is { 1, 2, 3, 4, 5, 6, 7 }, repeat swap as below:
    // 2 -&gt; 3 -&gt; 5 -&gt; 2 -&gt; 3 ...
    while (numSwaps &lt; effLength - 1) {
        // swap (effLength - 1) times because 1st position is unchanged
        int newPos = getNewPosition(A, pos, half);
        if (visited[newPos]) {
            // if this new position is swap already, skip it
            pos = (pos + 1) % effLength;
            posValue = A[pos];
            continue;
        }
        int temp = A[newPos];
        A[newPos] = posValue;
        posValue = temp;
        pos = newPos;

        visited[newPos] = true;
        numSwaps++;
    }
}

private int getNewPosition(int[] array, int pos, int half) {
    if (pos &lt; half) {
        return 2 * pos;
    } else {
        return 2 * (pos - half) + 1;
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Run-Length Encoding]]></title>
    <link href="http://okckd.github.io/blog/2014/07/31/Run-Length-Encoding/"/>
    <updated>2014-07-31T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/07/31/Run-Length-Encoding</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://tech-queries.blogspot.sg/2008/11/run-length-encoding.html">link</a></p>

<blockquote><p>You are given a string like &ldquo;aaaabbbcc&rdquo;, do an in place conversion which write frequency of each charater(which come continuosly) with that character.</p>

<p>Example:</p>

<p>input: aaabbbcc</p>

<p>output: a3b2c2</p></blockquote>

<h3>Solution</h3>

<p>The most important point is <strong>whether or not you find the special cases</strong>, and did you clarify how to handle them.</p>

<p><strong>First special case is only 1 character</strong>, should you append a &lsquo;1&rsquo; or not. Note that this question requires &lsquo;in place&rsquo; conversion. So &lsquo;1&rsquo; is not supposed to be appended after single-occurance character. This is really important to know, if the question does not specify. (though sometimes, the question asks you to apppend a &lsquo;1&rsquo;, eg. <a href="http://www.geeksforgeeks.org/run-length-encoding/">here</a>).</p>

<p><strong>Second case is when occurance >= 10</strong>. We could not simply append (&lsquo;0&rsquo; + numberOfOccurance), because the number could be 12. This is another very important case to take note.</p>

<p>The code can be seen anywhere.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Points on Globe Puzzle]]></title>
    <link href="http://okckd.github.io/blog/2014/07/31/Points-On-Globe/"/>
    <updated>2014-07-31T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/07/31/Points-On-Globe</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://tech-queries.blogspot.sg/2009/08/points-on-globe.html">link</a></p>

<blockquote><p>How many points are there on the globe where, by walking one mile south, one mile east, and one mile north, you reach the place where you started?</p></blockquote>

<h3>Solution</h3>

<p>One point in the <strong>North Pole</strong>, and many circles in the <strong>South Pole</strong>.</p>

<p>Read more at question post.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Number of Bus-Stations]]></title>
    <link href="http://okckd.github.io/blog/2014/07/31/Number-Of-Bus-Stations/"/>
    <updated>2014-07-31T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/07/31/Number-Of-Bus-Stations</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://tech-queries.blogspot.sg/2009/05/number-of-bus-stations.html">link</a></p>

<blockquote><p>At a bus-station, you have time-table for buses arrival and departure. You need to find the minimum number of platforms so that all the buses can be accommodated as per their schedule.</p>

<p>Example: Time table is like below:</p></blockquote>

<pre><code>Bus         Arrival         Departure 
BusA        0900 hrs        0930 hrs
BusB        0915 hrs        1300 hrs
BusC        1030 hrs        1100 hrs
BusD        1045 hrs        1145 hrs
</code></pre>

<blockquote><p>The answer must be 3.</p></blockquote>

<h3>Solution</h3>

<p>The answer is same as finding the maximum number of bus at the bus-station at the same time.</p>

<p><strong>The suggestted solution</strong> from <a href="http://tech-queries.blogspot.sg/2009/05/number-of-bus-stations.html">here</a>:</p>

<blockquote><p>So first sort all the arrival(A) and departure(D) time in an int array. Please save the corresponding arrival or departure in the array also.</p>

<p>After sorting our array will look like this:</p></blockquote>

<pre><code>0900    0915    1930    1030    1045    1100    1145    1300
A       A       D       A       A       D       D       D
</code></pre>

<p>Now use a counter. When sees an A, increment. When sees an D, decreament. In the end, return the largest counter value.</p>

<p>Note: If you have a arriving and a departing at same time, put departure time first.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Inorder Successor in Binary Search Tree]]></title>
    <link href="http://okckd.github.io/blog/2014/07/31/Inorder-Successor-BST/"/>
    <updated>2014-07-31T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/07/31/Inorder-Successor-BST</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.geeksforgeeks.org/inorder-successor-in-binary-search-tree/">link</a></p>

<blockquote><p>In Binary Tree, Inorder successor of a node is the next node in Inorder traversal of the Binary Tree. Inorder Successor is NULL for the last node in Inoorder traversal.</p>

<p>Write a program with:</p>

<ol>
<li>parent pointer provided</li>
<li>parent pointer not provided</li>
</ol>
</blockquote>

<h3>Solution</h3>

<p><strong>If have parent pointer, it&rsquo;s easy</strong>. Read solution <a href="http://tech-queries.blogspot.sg/2010/04/inorder-succesor-in-binary-tree.html">here</a>.</p>

<p><strong>If no parent pointer, then we make use of the property of BST, can get an O(h) solution</strong>. h is the height.</p>

<p>A very good solution from <a href="http://algorithmsandme.blogspot.sg/2013/08/binary-search-tree-inorder-successor.html">this blog</a>.</p>

<ol>
<li>Start with root.</li>
<li>If the node is given has less than root, then search on left side <strong>and update successor</strong>.</li>
<li>If the node is greater than root, then search in right part, <strong>don&rsquo;t update successor</strong>.</li>
<li>If we find the node

<ol>
<li>if the node has right sub tree, then the minimum node on the right sub tree of node is the in-order successor.</li>
<li>otherwise, just return successor</li>
</ol>
</li>
</ol>


<p>The most important point is: we only update <strong>successor</strong> during left turn, and don&rsquo;t update during right turn.</p>

<h3>Code</h3>

<p><strong>written by me</strong></p>

<pre><code>public TreeNode inorderSuccessor(TreeNode root, TreeNode target) {
    if (target.right != null) {
        return this.findLeftMost(target.right);
    } else {
        return this.traverse(root, new TreeNode(-1), target);
    }
}

private TreeNode traverse(TreeNode cur, TreeNode pre, TreeNode target) {
    if (cur.val == target.val) {
        return pre;
    } else if (cur.val &lt; target.val) {
        cur = cur.right;
        return traverse(cur, pre, target);
    } else {
        pre = cur;
        cur = cur.left;
        return traverse(cur, pre, target);
    }
}

private TreeNode findLeftMost(TreeNode node) {
    while (node.left != null) {
        node = node.left;
    }
    return node;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Peripheral of a Complete Tree]]></title>
    <link href="http://okckd.github.io/blog/2014/07/30/Peripheral-Of-Complete-Tree/"/>
    <updated>2014-07-30T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/07/30/Peripheral-Of-Complete-Tree</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://tech-queries.blogspot.sg/2010/09/peripheral-boundary-of-complete-tree.html">link</a></p>

<blockquote><p>Write a program to find the anti-clock-wise peripheral (boundary) of a complete tree.</p>

<p>For a complete tree peripheral (boundary) is defined as</p></blockquote>

<pre><code>1. First the root
1. Then nodes on left edge
1. Then leaf nodes
1. Then nodes on right edge
</code></pre>

<p><img class="left" src="http://okckd.github.io/assets/images/peripheral-of-tree.png"></p>

<blockquote><p>For the above tree, peripheral will be: 0 1 3 7 8 9 10 11 12 13 14 6 2</p></blockquote>

<h3>Solution</h3>

<p><strong>It&rsquo;s a very tricky solution</strong>. Very clever I would say.</p>

<ol>
<li>print root node</li>
<li>print left nodes and leafs of left subtree in same order</li>
<li>print leafs and right nodes of right subtree in same order</li>
</ol>


<p>Do practise this question again in the future!</p>

<h3>Code</h3>

<p><strong>written by me</strong></p>

<p>I used an Enum in the code.</p>

<pre><code>public enum PeriType {
    LEFT, RIGHT, LEAF
}

private void peripheral(TreeNode root) {
    printNode(root);
    helper(root.left, PeriType.LEFT);
    helper(root.right, PeriType.RIGHT);
    System.out.println();
}

private void helper(TreeNode node, PeriType type) {
    if (node == null) {
        return;
    }
    switch (type) {
    case LEFT:
        printNode(node);
        helper(node.left, PeriType.LEFT);
        helper(node.right, PeriType.LEAF);
        break;
    case RIGHT:
        helper(node.left, PeriType.LEAF);
        helper(node.right, PeriType.RIGHT);
        printNode(node);
        break;
    case LEAF:
        if (node.left == null &amp;&amp; node.right == null) {
            printNode(node);
        } else {
            helper(node.left, PeriType.LEAF);
            helper(node.right, PeriType.LEAF);
        }
        break;
    }
}

private void printNode(TreeNode root) {
    System.out.print(root.val + " ");
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Nth Fibonacci Number in O(LogN)]]></title>
    <link href="http://okckd.github.io/blog/2014/07/30/Nth-Fibonacci-Number-In-LogN/"/>
    <updated>2014-07-30T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/07/30/Nth-Fibonacci-Number-In-LogN</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://tech-queries.blogspot.sg/2010/09/nth-fibbonacci-number-in-ologn.html">link</a></p>

<blockquote><p>Find Nth fibonacci number in O(logN) time complexity.</p></blockquote>

<h3>Solution</h3>

<p><img class="middle" src="http://okckd.github.io/assets/images/fibonacci_matrix.png"></p>

<p>It&rsquo;s a recursive sequence, where we can get the following equation:</p>

<pre><code>A* [ F(1) F(0) ] = [ F(2) F(1) ]
A* [ F(2) F(1) ] = [ F(3) F(2) ] = A^2 * [ F(1) F(0) ]
A* [ F(3) F(2) ] = [ F(4) F(3) ] = A^3 * [ F(1) F(0) ]
..
..
..
..
A* [ F(n) F(n-1) ] = [ F(n+1) F(n) ] = A^n * [ F(1) F(0) ]
</code></pre>

<p>Which means:</p>

<p><img class="middle" src="http://okckd.github.io/assets/images/fibonacci_equation.png"></p>

<p>So all that is left is finding the nth power of the matrix A. Well, this can be computed in O(log n) time, by recursive doubling. For more, see question post or <a href="http://www.codechef.com/wiki/tutorial-dynamic-programming#Finding_nth_Finobacci_number_in_Olog_n">here</a>.</p>

<h3>Code</h3>

<p><strong>not written</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Which Loop Is Faster]]></title>
    <link href="http://okckd.github.io/blog/2014/07/29/Which-is-faster/"/>
    <updated>2014-07-29T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/07/29/Which-is-faster</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://tech-queries.blogspot.sg/2010/09/which-loop-is-faster.html">link</a></p>

<blockquote><p>A very basic programming puzzle is being asked in programming interviews since last few years. Which of the below two loops will run faster?</p></blockquote>

<pre><code>/* First */  
for(i=0;i&lt;100;i++)  
 for(j=0;j&lt;10;j++)  
     //do somthing

/* Second */  
for(i=0;i&lt;10;i++)  
 for(j=0;j&lt;100;j++)  
     //do somthing  
</code></pre>

<h3>Solution</h3>

<ol>
<li>The First executes assignment operations 101 times, while Second executes only 11 times.</li>
<li>The First does 101 + 1100 = 1201 comparisons, while the Second does 11 + 1010 = 1021 comparisons.</li>
<li>The First executes 1100 increments, while the Second executes 1010 increments.</li>
</ol>


<h3>Code</h3>

<p>The following code proves why First is faster.</p>

<pre><code>public static void solution() {
    int i, j, k, l;
    k = 0;
    l = 0;
    /* FIRST */
    for (i = 0, l++; i &lt; 10; i++, k++)
        for (j = 0, l++; j &lt; 100; j++, k++)
            ;
    // printf("First Loop: %d\t%d\n", k, l);
    System.out.println(k);
    System.out.println(l);

    k = 0;
    l = 0;
    /* SECOND */
    for (i = 0, l++; i &lt; 100; i++, k++)
        for (j = 0, l++; j &lt; 10; j++, k++)
            ;
    // printf("Second Loop: %d\t%d\n", k, l);
    System.out.println(k);
    System.out.println(l);
}
</code></pre>

<p>output is : 1010, 11, 1100, 101</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Remove Chars in Pairs]]></title>
    <link href="http://okckd.github.io/blog/2014/07/29/Remove-char-in-Pairs/"/>
    <updated>2014-07-29T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/07/29/Remove-char-in-Pairs</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.geeksforgeeks.org/recursively-remove-adjacent-duplicates-given-string/">link</a></p>

<blockquote><p>Given a string, recursively remove adjacent duplicate characters from string. The output string should not have any adjacent duplicates.</p>

<p>Input:  azxxzy</p>

<p>Output: ay</p>

<p>First &ldquo;azxxzy&rdquo; is reduced to &ldquo;azzy&rdquo;. The string &ldquo;azzy&rdquo; contains duplicates, so it is further reduced to &ldquo;ay&rdquo;.</p></blockquote>

<h3>Analysis</h3>

<p>We could do it recursively until all pairs are removed, but it&rsquo;s not good.</p>

<p>There&rsquo;s an O(n) solution.</p>

<h3>Solution</h3>

<p><strong>Most obvious solution is to use a stack</strong>. In the end, the stack stores all unmatched chars.</p>

<p>But we can also <strong>do it without using space</strong> (assuming the input is char array). Just use the original char array to store result, with the helper of 2 pointers. <a href="http://tech-queries.blogspot.sg/2011/02/remove-pairs.html">The code</a> is very much concise.</p>

<h3>Code</h3>

<p><strong>Refactored code by me</strong></p>

<pre><code>public static String remove_pair(char[] input) {
    int len = input.length;
    int right = 1, left = 0;

    while (right &lt; len) {
        // Cancel pairs
        while (right &lt; len &amp;&amp; left &gt;= 0 &amp;&amp; input[right] == input[left]) {
            right++;
            left--;
        }
        if (right == len) {
            break;
        }
        input[++left] = input[right++];
    }
    return String.valueOf(input).substring(0, left + 1);
}
</code></pre>
]]></content>
  </entry>
  
</feed>
