<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://okckd.github.io/atom.xml" rel="self"/>
  <link href="http://okckd.github.io/"/>
  <updated>2014-08-10T02:30:05+08:00</updated>
  <id>http://okckd.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Question] Test Command Line Copy]]></title>
    <link href="http://okckd.github.io/blog/2014/08/09/Test-command-line-copy/"/>
    <updated>2014-08-09T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/09/Test-command-line-copy</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://stackoverflow.com/questions/6591652/how-do-i-test-the-copy-command-in-the-windows-environment">link</a></p>

<blockquote><p>testing the copy command in windows environment</p></blockquote>

<h3>Solution</h3>

<p><a href="http://stackoverflow.com/a/6591999">The most important point</a> is to <strong>come up with different domains of inputs and scenarios</strong>.</p>

<h3>Copying between:</h3>

<ol>
<li>network share</li>
<li>A really slow network share across the Internet</li>
<li>partitions</li>
<li>disks</li>
<li>disks of different types (flash, usb, external sata, SSD, etc&hellip;)</li>
<li>directories</li>
<li>within the same directory</li>
</ol>


<h3>Naming</h3>

<ol>
<li>Normal file name</li>
<li>Filename that exceeds 8.3 (verylongfilename.whatever)</li>
<li>Copying a very long file name, but referencing it by it&rsquo;s 8.3 name (copy verylo~1.wha d:)</li>
<li>A full directory path that exeeds MAX_PATH (260) characters (e.g. c:\a\very\long\directory\name\that\goes\on\forever\in\length&hellip;&hellip;foo.txt)</li>
<li>By absolute addressing (\?\c:\foo\foo.txt)</li>
<li>wildcards (e.g. <em>.</em> *.txt foo?.txt )</li>
<li>A filename with unicode characters</li>
<li>A filename with illegal characters in it (there are creative ways to get these files on disk)</li>
</ol>


<h3>Attributes</h3>

<ol>
<li>Testing with different file attributes (read-only, hidden, system, archive, etc&hellip;)</li>
<li>Validate timestamp is preserved across copies</li>
<li>Validate timestamp is preserved across network file share copies when the destination machine is in another timezone</li>
<li>NTFS ACLs are preserved</li>
</ol>


<h3>Addressing types</h3>

<ol>
<li>reference by absolute path (e.g. copy c:\some\directory\foo.txt c:\other\place\foo.txt)</li>
<li>reference by relative path (e.g. copy &#8230;.\documents\whatever\foo.txt subdirectory/foo.txt)</li>
<li>By absolute drive letter into current working directoroy of destination (with no path (e.g. copy foo.txt d:)</li>
<li>Network share mounted to a drive letter</li>
</ol>


<h3>Failure cases, edge cases, and hack attacks</h3>

<ol>
<li>Try to copy a file onto itself (e.g copy c:\foo.txt c:\foo.txt)</li>
<li>Copy when the network share is down.</li>
<li>Unplug the network cable in the middle of a network file copy</li>
<li>copy to a read only directory</li>
<li>copy when the source file is locked.</li>
<li>copy the when destination file exists but the destination file exists and is read only</li>
<li>Detach the external disk right before the file copy starts</li>
<li>disk is near full (But would be full before the entire copy finishes)</li>
<li>disk is full</li>
<li>Unplug the power cable in the middle of the copy!</li>
<li>During a very long copy, start another copy with the same source file, but to another destination</li>
<li>During a very long copy, start another copy with a different source file, but the the same destination</li>
<li>During a very long copy, start another copy with the same source and destination files!</li>
</ol>


<h3>File types</h3>

<ol>
<li>ascii file</li>
<li>unicode file</li>
<li>binary file</li>
</ol>


<h3>Environments</h3>

<ol>
<li>RAID configurations</li>
<li>FAT and NTFS</li>
<li>Windows XP, Vista, 7, Server 2003, etc&hellip; (you can quantify this by asking the requirement of &ldquo;which OS&rdquo; up front)</li>
<li>Virtual Machine (VMWare, virtual PC, hypervisor, etc&hellip;)</li>
<li>Intel and AMD</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] Process vs. Thread]]></title>
    <link href="http://okckd.github.io/blog/2014/08/09/Process-and-thread/"/>
    <updated>2014-08-09T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/09/Process-and-thread</id>
    <content type="html"><![CDATA[<h3>First difference</h3>

<p><strong><a href="http://www.programmerinterview.com/index.php/operating-systems/thread-vs-process/">A process</a> can contain multiple threads</strong>. When you open Microsoft Word, you start <strong>a process</strong> that runs Word. The OS creates a process and begins executing the <strong>primary thread</strong> of that process.</p>

<p>Since a process can consist of multiple threads, a thread could be considered <strong>a ‘lightweight’ process</strong>.</p>

<h3>Second difference</h3>

<p>Another difference is that <strong>threads</strong> within the same process <strong>share the same address space</strong>, whereas different <strong>processes</strong> do not.</p>

<p>This allows threads to read from and write to the same data structures and variables, and also <strong>facilitates communication between threads</strong>. Communication between processes – also known as IPC, or <strong>inter-process communication</strong> – is quite difficult and resource-intensive.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] Median of Array in Distributed Computers]]></title>
    <link href="http://okckd.github.io/blog/2014/08/09/Median-in-distributed-computers/"/>
    <updated>2014-08-09T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/09/Median-in-distributed-computers</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.quora.com/Distributed-Algorithms/What-is-the-distributed-algorithm-to-determine-the-median-of-arrays-of-integers-located-on-different-computers">link</a></p>

<blockquote><p>What is the <strong>distributed algorithm</strong> to determine the median of arrays of 1 billion integers located on different computers?</p></blockquote>

<h3>Solution</h3>

<ol>
<li><p>Suppose you have <strong>a master node</strong> (or are able to use a consensus protocol to elect a master from among your servers).</p></li>
<li><p>The master queries all servers for the size of their sets of data, so that it knows to look for the k = n/2 largest element.</p></li>
<li><p>The master then selects a random server and queries <strong>a random element</strong>.</p></li>
<li><p>The master broadcasts this element to each server.</p></li>
<li><p>Each server partitions its elements into those larger than or equal to the broadcasted element and those smaller than the broadcasted element.</p></li>
<li><p>Each server returns to the master the <strong>size of the larger-than partition</strong>, call this m.</p>

<ol>
<li><p>If the sum of these sizes is greater than k, the master indicates to each server to disregard the &lsquo;less-than&rsquo; set.</p></li>
<li><p>If it is less than k, the master indicates to disregard the larger-than sets and updates k = k &ndash; m.</p></li>
<li><p>If it is exactly k, the algorithm terminates and the value returned is the pivot selected at the beginning of the iteration.</p></li>
</ol>
</li>
<li><p>Recurse beginning with selecting a new random pivot from the remaining elements.</p></li>
</ol>


<p><a href="http://qr.ae/k2DcS">ref</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] Functional Programming]]></title>
    <link href="http://okckd.github.io/blog/2014/08/09/Functional-programming/"/>
    <updated>2014-08-09T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/09/Functional-programming</id>
    <content type="html"><![CDATA[<h3>Overview</h3>

<p><strong><a href="http://stackoverflow.com/a/23290">A functional language</a> allows you to write a mathematical function</strong>, i.e. a function that takes n arguments and returns a value. If the program is executed, this function is evaluated.</p>

<p>A purely functional program <strong>always yields the same value for an input</strong>, and the order of evaluation is not well-defined; which means that uncertain values like user input or random values are hard to model in purely functional languages.</p>

<h3>One Sentence</h3>

<p><strong>Functional programming is like describing your <a href="http://stackoverflow.com/a/23475">problem to a mathematician</a>. Imperative programming is like giving instructions to an idiot</strong>.</p>

<h3>Pros and Cons</h3>

<p>Functional Programming allows coding <a href="http://stackoverflow.com/a/24294">with fewer potentials for bugs</a> because each component is completely isolated. Also, using recursion and first-class functions allows for <strong>simple proofs of correctness</strong> which typically mirror the structure of the code.</p>

<p>Functional programming languages are typically <a href="http://en.wikipedia.org/wiki/Functional_programming#Efficiency_issues">less efficient</a> in their use of CPU and memory than imperative languages such as C and Pascal.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] Thread Pool Pattern]]></title>
    <link href="http://okckd.github.io/blog/2014/08/08/Thread-pool-pattern/"/>
    <updated>2014-08-08T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/08/Thread-pool-pattern</id>
    <content type="html"><![CDATA[<h3>Overview</h3>

<p><a href="http://programmers.stackexchange.com/a/173580">Thread pool</a> is a collection of managed threads usually organized in a queue, which execute the tasks in the task queue.</p>

<p><img class="middle" src="http://okckd.github.io/assets/images/thread-pool.png"></p>

<p><a href="http://en.wikipedia.org/wiki/Thread_pool_pattern">A sample thread pool</a> (green boxes) with waiting tasks (blue) and completed tasks (yellow)</p>

<h3>Why Thread Pool?</h3>

<p><a href="http://www.ibm.com/developerworks/library/j-jtp0730/">Many server applications</a>, such as <strong>Web servers (eg. Tomcat)</strong>, database servers, file servers, or mail servers must process a large number of tasks received from a network protocol. Often, the task is short-lived and the number of requests is large.</p>

<p><strong>Thread Pools are useful when you need to limit the number of threads</strong> running in your application at the same time.</p>

<h3>More details</h3>

<p>A thread pool is a group of pre-instantiated, idle threads which stand ready to be given work. These are preferred over instantiating new threads for each task when there is <strong>a large number of short tasks</strong> to be done <strong>rather than a small number of long ones</strong>.</p>

<p>Instead of starting a new thread for every task to execute concurrently, the <strong>task can be passed to a thread pool</strong>. As soon as the pool has any idle threads the task is assigned to one of them and executed.</p>

<p>Thread pools are often used in multi threaded servers. Each connection <strong>arriving at the server via the network is wrapped as a task</strong> and passed on to a thread pool. The threads in the thread pool will process the requests on the connections concurrently.</p>

<h3>Code</h3>

<p><strong>a <a href="http://tutorials.jenkov.com/java-concurrency/thread-pools.html">simple thread pool implementation</a></strong></p>

<p>Pool Class:</p>

<pre><code>public class ThreadPool {

  private BlockingQueue taskQueue = null;
  private List&lt;PoolThread&gt; threads = new ArrayList&lt;PoolThread&gt;();
  private boolean isStopped = false;

  public ThreadPool(int noOfThreads, int maxNoOfTasks){
    taskQueue = new BlockingQueue(maxNoOfTasks);

    for(int i=0; i&lt;noOfThreads; i++){
      threads.add(new PoolThread(taskQueue));
    }
    for(PoolThread thread : threads){
      thread.start();
    }
  }

  public void synchronized execute(Runnable task){
    if(this.isStopped) throw
      new IllegalStateException("ThreadPool is stopped");

    this.taskQueue.enqueue(task);
  }

  public synchronized void stop(){
    this.isStopped = true;
    for(PoolThread thread : threads){
      thread.stop();
    }
  }
}
</code></pre>

<p>Thread Class:</p>

<pre><code>public class PoolThread extends Thread {

  private BlockingQueue taskQueue = null;
  private boolean       isStopped = false;

  public PoolThread(BlockingQueue queue){
    taskQueue = queue;
  }

  public void run(){
    while(!isStopped()){
      try{
        Runnable runnable = (Runnable) taskQueue.dequeue();
        runnable.run();
      } catch(Exception e){
        //log or otherwise report exception,
        //but keep pool thread alive.
      }
    }
  }

  public synchronized void stop(){
    isStopped = true;
    this.interrupt(); //break pool thread out of dequeue() call.
  }

  public synchronized void isStopped(){
    return isStopped;
  }
}
</code></pre>

<p>An explanation:</p>

<blockquote><p>The thread pool implementation consists of two parts. A ThreadPool class which is the public interface to the thread pool, and a PoolThread class which implements the threads that execute the tasks.</p>

<p>To execute a task the method ThreadPool.execute(Runnable r) is called with a Runnable implementation as parameter. The Runnable is enqueued in the blocking queue internally, waiting to be dequeued.</p>

<p>The Runnable will be dequeued by an idle PoolThread and executed. You can see this in the PoolThread.run() method. After execution the PoolThread loops and tries to dequeue a task again, until stopped.</p>

<p>To stop the ThreadPool the method ThreadPool.stop() is called. The stop called is noted internally in the isStopped member. Then each thread in the pool is stopped by calling PoolThread.stop(). Notice how the execute() method will throw an IllegalStateException if execute() is called after stop() has been called.</p>

<p>The threads will stop after finishing any task they are currently executing. Notice the this.interrupt() call in PoolThread.stop(). This makes sure that a thread blocked in a wait() call inside the taskQueue.dequeue() call breaks out of the wait() call, and leaves the dequeue() method call with an InterruptedException thrown. This exception is caught in the PoolThread.run() method, reported, and then the isStopped variable is checked. Since isStopped is now true, the PoolThread.run() will exit and the thread dies.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] Producer Consumer Problem]]></title>
    <link href="http://okckd.github.io/blog/2014/08/08/Producer-consumer-problem/"/>
    <updated>2014-08-08T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/08/Producer-consumer-problem</id>
    <content type="html"><![CDATA[<h3>Overview</h3>

<p>Producer-consumer problem illustrates the need for <strong>synchronization</strong> in systems where <strong>many processes share a resource</strong>.</p>

<p><a href="http://cs.gmu.edu/cne/modules/ipc/aqua/producer.html">In the problem</a>, two processes share a fixed-size buffer. One process produces information and puts it in the buffer, while the other process consumes information from the buffer. These processes do not take turns accessing the buffer, they both work concurrently.</p>

<h3>Inadequate Solution</h3>

<p><img class="middle" src="http://okckd.github.io/assets/images/producer-workflow.gif"></p>

<p><img class="middle" src="http://okckd.github.io/assets/images/consumer-workflow.gif"></p>

<p><strong>The code might look like this</strong>:</p>

<pre><code>BufferSize = 3;
  count = 0;

Producer()
{
    int widget;
    WHILE (true) {                   // loop forever
      make_new(widget);              // create a new widget to put in the buffer
      IF(count==BufferSize)
           Sleep();                  // if the buffer is full, sleep
      put_item(widget);              // put the item in the buffer
      count = count + 1;             // increment count of items
      IF (count==1)
         Wakeup(Consumer);           // if the buffer was previously empty, wake
   }                                 //  the consumer
}

Consumer()
{
    int widget;
    WHILE(true) {                    // loop forever
      IF(count==0)
           Sleep();                  // if the buffer is empty, sleep
      remove_item(widget);           // take an item from the buffer
      count = count + 1;             // decrement count of items
      IF(count==N-1)
            Wakeup(Producer);        // if buffer was previously full, wake
                                     //  the producer
      Consume_item(widget);          // consume the item
    }
}
</code></pre>

<p>This <a href="http://en.wikipedia.org/wiki/Producer%E2%80%93consumer_problem#Inadequate_implementation">will cause problems</a>, because <strong>it contains a race condition</strong> that can lead to a deadlock. Or in simply words, it has the potential of <a href="http://cs.gmu.edu/cne/modules/ipc/purple/prodsem.html">losing wakeups</a>.</p>

<p>An alternative analysis is that if the programming language does not define the semantics of <strong>concurrent accesses to shared variables (in this case itemCount)</strong> without use of synchronization, then the solution is unsatisfactory for that reason, without needing to explicitly demonstrate a race condition.</p>

<p>Solutions are: <strong>semaphores or monitors</strong>.</p>

<h3>Semaphore</h3>

<pre><code>semaphore mutex = 1;
semaphore fillCount = 0;
semaphore emptyCount = BUFFER_SIZE;

procedure producer() {
    while (true) {
        item = produceItem();
        down(emptyCount);
            down(mutex);
                putItemIntoBuffer(item);
            up(mutex);
        up(fillCount);
    }
}

procedure consumer() {
    while (true) {
        down(fillCount);
            down(mutex);
                item = removeItemFromBuffer();
            up(mutex);
        up(emptyCount);
        consumeItem(item);
    }
}
</code></pre>

<h3>Monitor</h3>

<pre><code>monitor ProducerConsumer {
    int itemCount;
    condition full;
    condition empty;

    procedure add(item) {
        while (itemCount == BUFFER_SIZE) {
            wait(full);
        }

        putItemIntoBuffer(item);
        itemCount = itemCount + 1;

        if (itemCount == BUFFER_SIZE -1) {
            notify(full);
        }
    }
    procedure remove() {
        while (itemCount == 0) {
            wait(empty);
        }

        item = removeItemFromBuffer();
        itemCount = itemCount - 1;

        if (itemCount == 1) {
            notify(empty);
        }


        return item;
    }
}

procedure producer() {
    while (true) {
        item = produceItem();
        ProducerConsumer.add(item);
    }
}

procedure consumer() {
    while (true) {
        item = ProducerConsumer.remove();
        consumeItem(item);
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Max Sum of Non-Consecutive Elements]]></title>
    <link href="http://okckd.github.io/blog/2014/08/08/Max-sum-non-consecutive/"/>
    <updated>2014-08-08T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/08/Max-sum-non-consecutive</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://tech-queries.blogspot.sg/2009/05/max-possible-sum-of-non-consecutive.html">link</a></p>

<blockquote><p>There is an integer array consisting positive numbers only.</p>

<p>Find maximum possible sum of elements such that there are no 2 consecutive elements present in the sum.</p></blockquote>

<h3>Solution</h3>

<p>It&rsquo;s a little tricky to write the equation. Always remember the <strong>basic principle of DP</strong> is to assume that solution is found for (i -1), and then we calculate solution for input (i).</p>

<p><strong>Don&rsquo;t miss the (i-1) part</strong>.</p>

<h3>Code</h3>

<p><strong>written by me</strong></p>

<pre><code>public int maxSumNonConsec(int[] input) {
    int len = input.length;
    int[] dp = new int[len];
    dp[0] = input[0];
    dp[1] = Math.max(input[0], input[1]);
    for (int i = 2; i &lt; len; i++) {
        dp[i] = Math.max(dp[i - 1], input[i] + dp[i - 2]);
    }
    return dp[len - 1];
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Decimal to Hexadecimal]]></title>
    <link href="http://okckd.github.io/blog/2014/08/08/Decimal-to-Hex/"/>
    <updated>2014-08-08T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/08/Decimal-to-Hex</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://stackoverflow.com/questions/13465098/decimal-to-hexadecimal-converter-in-java">link</a></p>

<blockquote><p>Decimal to Hexadecimal conversion.</p></blockquote>

<h3>Solution</h3>

<p>Convert binary to hex as a group of 4 bits.</p>

<p>Read code.</p>

<h3>Code</h3>

<p><strong>written by me</strong></p>

<pre><code>private final char[] hexDigits = { '0', '1', '2', '3', '4', '5', '6', '7',
        '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };
private final int flag = 0x0F;

public String decToHex(int dec) {
    char[] hex = new char[8];
    for (int i = 7; i &gt;= 0; i--) {
        int oneDigit = flag &amp; dec;
        dec &gt;&gt;= 4;
        hex[i] = hexDigits[oneDigit];
    }
    return String.valueOf(hex);
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] Composition Over Inheritance]]></title>
    <link href="http://okckd.github.io/blog/2014/08/08/Composition-over-inheritance/"/>
    <updated>2014-08-08T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/08/Composition-over-inheritance</id>
    <content type="html"><![CDATA[<h3>Overview</h3>

<p><a href="http://en.wikipedia.org/wiki/Composition_over_inheritance">Composition over inheritance</a> in OOP is a technique by which classes achieve <strong>polymorphic behavior and code reuse</strong> by containing other classes <strong>instead of</strong> through inheritance.</p>

<h3>Benefits</h3>

<p><a href="http://en.wikipedia.org/wiki/Composition_over_inheritance#Benefits">It gives</a> the design <strong>higher flexibility</strong>, giving business-domain classes and more stable business domain in the long term. In other words, HAS-A can be better than an IS-A relationship.</p>

<p><strong>And inheritance <a href="http://stackoverflow.com/a/891908">breaks encapsulation</a></strong>! This post also points out these (which is hard to understand):</p>

<blockquote><ol>
<li><p>You can&rsquo;t change the implementation inherited from super classes at runtime (obviously because inheritance is defined at compile time).</p></li>
<li><p>Inheritance exposes a subclass to details of its parent&rsquo;s class implementation, that&rsquo;s why it&rsquo;s often said that inheritance breaks encapsulation (in a sense that you really need to focus on interfaces only not implementation, so reusing by sub classing is not always preferred).</p></li>
<li><p>The tight coupling provided by inheritance makes the implementation of a subclass very bound up with the implementation of a super class that any change in the parent implementation will force the sub class to change.</p></li>
<li><p>Excessive reusing by sub-classing can make the inheritance stack very deep and very confusing too.</p></li>
</ol>
</blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Add Integers Without +/++]]></title>
    <link href="http://okckd.github.io/blog/2014/08/08/Add-integer-without-plus-sign/"/>
    <updated>2014-08-08T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/08/Add-integer-without-plus-sign</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://javarevisited.blogspot.sg/2013/06/how-to-add-two-integer-numbers-without-plus-arithmetic-operator-java-example.html">link</a></p>

<blockquote><p>Add two numbers (integers) without using + or plus arithmetic operator.</p></blockquote>

<h3>Solution</h3>

<p><strong>Bit operations</strong>.</p>

<p>We could not do this in 1 pass, because multiple rounding issues.</p>

<p>So we do it in while-loop then! 2 solutions available: <strong>iteratively and recursively</strong>.</p>

<h3>Code</h3>

<p><strong>written by me</strong></p>

<pre><code>public int add(int x, int y) {
    // add y into x (and y results to 0)
    while (y != 0) {
        int carry = x &amp; y;
        int sum = x ^ y;
        x = sum;
        y = carry &lt;&lt; 1;
    }
    return x;
}
</code></pre>

<p><strong>recursive</strong></p>

<pre><code>public int add2(int x, int y) {
    if (y == 0) {
        return x;
    }
    int carry = (x &amp; y) &lt;&lt; 1;
    return add2(x ^ y, carry);
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Million Phone Numbers]]></title>
    <link href="http://okckd.github.io/blog/2014/08/07/Million-phone-numbers/"/>
    <updated>2014-08-07T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/07/Million-phone-numbers</id>
    <content type="html"><![CDATA[<h3>Question 1</h3>

<p><a href="http://www.glassdoor.com/Interview/How-would-you-store-1-million-phone-numbers-QTN_456.htm">link</a></p>

<blockquote><p>How would you store 1 million phone numbers?</p></blockquote>

<h3>Solution</h3>

<p>BitMap.</p>

<blockquote><p>The key here is that 1 million phone numbers will be within some range, likely 10 million or so. 10 million bits = 10<sup>7</sup> bits ~ 0.12 GB. Just have a bit array where the first bit being set implies that the first phone number is set (e.g., 10 000 000) and the last bit indicates the last phone number (10 999 999). If you find a number in the list, just set the appropriate bit. You now have a bit vector of size 1million bits, sorted, and to check for a particular number, you just check whether the corresponding bit is set.</p></blockquote>

<h3>Question 2</h3>

<p><a href="http://www.careercup.com/question?id=7997766">link</a></p>

<blockquote><p>How would you sort 1 million phone numbers?</p></blockquote>

<h3>Solution</h3>

<p>BitMap or radix sort, both are O(n) complexity.</p>

<p>Read more <a href="http://www.vex.net/~trebla/compsci/sorting-phone-numbers.html">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Question] Memory-related Debugging Problem]]></title>
    <link href="http://okckd.github.io/blog/2014/08/07/Memory-related-debugging-problem/"/>
    <updated>2014-08-07T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/07/Memory-related-debugging-problem</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://stackoverflow.com/questions/4531742/debugging-a-program-that-crashes-10-times-in-different-places">link</a></p>

<blockquote><p>You are given the source to an application which is crashing during run time. After running it 10 times in a debugger, you find it never crashes in the same place.</p>

<p>What programming errors could be causing this crash? How would you test each one?</p></blockquote>

<h3>Analysis</h3>

<ol>
<li><p>code depends on timer/RNG</p></li>
<li><p>disk full, i.e. other processes may delete a different file causing more space to be available</p></li>
<li><p>memory issue, i.e. other processes allocate and/or free memory</p></li>
<li><p>a pointer points to a random location in memory that is changed by another process causing some values be &ldquo;valid&rdquo; (very rare though)</p></li>
</ol>


<p><a href="http://stackoverflow.com/a/4531769">In general</a> a situation with other process is likely.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] Distributed Network Bottleneck]]></title>
    <link href="http://okckd.github.io/blog/2014/08/07/Distributed-network-bottleneck/"/>
    <updated>2014-08-07T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/07/Distributed-network-bottleneck</id>
    <content type="html"><![CDATA[<h2>Question</h2>

<p><a href="http://www.mitbbs.com/article_t/JobHunting/32702821.html">link</a></p>

<blockquote><p>一个distributed的环境，有很多机器，现在你发现性能有问题，可能是网络带宽造成的，你怎么解决？ (你不能更换网络设备的前提下)</p></blockquote>

<h3>Answer</h3>

<ol>
<li>Identify problem</li>
</ol>


<p>首先得判定是否真的是网络造成的，就算是网络问题，哪些机器之间的网络问题？ 这个得先大概了解high level component dependency relationship，</p>

<p>看看是不是cpu memory disk都没有问题。 可以profile几个机器看看是不是 a lot of time spent waiting for network calls.</p>

<ol>
<li>Locate the faulty component</li>
</ol>


<p>判定是网络问题之后看是哪些components之间，或是某个component里面有很多网络通讯。</p>

<ol>
<li>Improvement</li>
</ol>


<p>不能更换设备的话，能不能改network topology来让critical path machine之间的带宽有改善。</p>

<p>要是不能改topology就只能改程序了。还是先identify top offender,然后就只能慢慢改了</p>

<ol>
<li>What&rsquo;s more</li>
</ol>


<p>要还有时间的话就可以聊聊问啥不能换设备，是资金问题还是用的已经是top of the line了？</p>

<p>或者是在public cloud上？</p>

<p>Answer suggested by user <strong>remus</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CC150] 9.7 Sort Large Files]]></title>
    <link href="http://okckd.github.io/blog/2014/08/07/9-4-sort-large-files/"/>
    <updated>2014-08-07T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/07/9-4-sort-large-files</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p>9.7 If you have a 2 GB file with one string per line, which sorting algorithm would you use to sort the file and why?</p>

<h3>Solution</h3>

<p><strong>External Sorting</strong> and N-way merge.</p>

<ol>
<li>Divide the file into K chunks, where X * K = 2 GB Bring each chunk into memory and sort the lines as usual using any O(n log n) algorithm Save the lines back to the file</li>
<li>Now bring the next chunk into memory and sort</li>
<li>Once we’re done, merge them one by one</li>
</ol>


<h3>Details</h3>

<p><a href="http://en.wikipedia.org/wiki/External_sorting#External_merge_sort">Wiki example</a> of sorting 900 megabytes of data using only 100 megabytes of RAM:</p>

<ol>
<li><strong>Read 100 MB of the data in main memory and sort</strong> by some conventional method, like quicksort.</li>
<li>Write the sorted data to disk.</li>
<li>Repeat steps 1 and 2 until all of the data is in sorted 100 MB chunks (there are 900MB / 100MB = 9 chunks), which now need to be merged into one single output file.</li>
<li><strong>Read the first 10 MB (= 100MB / (9 chunks + 1)) of each sorted chunk</strong> into input buffers in main memory and allocate the remaining 10 MB for an output buffer. (In practice, it might provide better performance to make the output buffer larger and the input buffers slightly smaller.)</li>
<li><strong>Perform a 9-way merge</strong> and store the result in the output buffer. Whenever the output buffer fills, write it to the final sorted file and empty it. Whenever any of the 9 input buffers empties, fill it with the next 10 MB of its associated 100 MB sorted chunk until no more data from the chunk is available. <strong>This is the key step that makes external merge sort work externally</strong> &mdash; because the merge algorithm only makes one pass sequentially through each of the chunks, each chunk does not have to be loaded completely; rather, sequential parts of the chunk can be loaded as needed.</li>
</ol>


<h3>Similar Question</h3>

<p><a href="http://www.glassdoor.com/Interview/Sort-a-million-32-bit-integers-using-only-2MB-of-RAM-QTN_120936.htm">link</a></p>

<blockquote><p>[Google] Sort a million 32 bit integers using only 2MB of RAM.</p></blockquote>

<p>1 million integers = 4MB which is > 2MB RAM.</p>

<p>Solution: external sort &ndash; divide and conquer</p>

<ol>
<li>read half the list into 2MB ram and sort using quicksort (quicksort uses logn space &ndash; however 0.5m integers is less than 2MB (2000kb v 2048kb) so this should be okay).</li>
<li>write sorted data to disk</li>
<li>repeat for next chunk</li>
<li>merging results: we need an output buffer. lets say this is 1MB. then we read 512KB from each of your chunks into input buffers. we then perform a 2-way merge of the data. when an input buffer becomes empty we can pull in the remainder of the chunk.</li>
<li>when the output buffer is full we write this to disk.</li>
<li>when the process completes we are left with 2x 1MB files sorted in the correct order.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Postorder Successor in Binary Tree]]></title>
    <link href="http://okckd.github.io/blog/2014/08/06/Postorder-successor-Binary-Tree/"/>
    <updated>2014-08-06T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/06/Postorder-successor-Binary-Tree</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.careercup.com/question?id=5173972006076416">link</a></p>

<blockquote><p>Write an algorithm to find the ‘next’ post-order successor of a given node in a binary tree and binary search tree.</p>

<ol>
<li>where each node has a link to its parent.</li>
<li>without parent pointer</li>
</ol>


<p>Implement 2 versions of the algorithm: 1.) binary tree 2.) BST</p></blockquote>

<h3>Solution</h3>

<p>In postorder, any node below current node shall be &lsquo;predecessor&rsquo; of current node. Thus we only care about current node&rsquo;s parent.</p>

<p>Suggested by a user:</p>

<pre><code>1) parent pointer is given. 
- go to the parent of the current node. 
- if current node is the right child of its parent =&gt; print parent. 
- else return leftmost node of the right sub-tree of parent. 

2) parent pointer is not given. 
- traverse the tree and find the parent of the current node 
- do the same as method (1). 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] Networks and TCP/IP]]></title>
    <link href="http://okckd.github.io/blog/2014/08/06/Networks-and-TCP-IP/"/>
    <updated>2014-08-06T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/06/Networks-and-TCP-IP</id>
    <content type="html"><![CDATA[<h2>Overview</h2>

<p><strong><a href="http://en.wikipedia.org/wiki/Internet_protocol_suite">Internet protocol suite</a></strong> is a networking model and communications protocols used by the Internet. It is commonly known as <strong>TCP/IP</strong>.</p>

<p>Four abstraction layers:</p>

<ol>
<li>Application layer</li>
<li>Transport layer</li>
<li>Internet layer</li>
<li>Link layer</li>
</ol>


<p><img class="middle" src="http://okckd.github.io/assets/images/network-layers-connected.png"></p>

<p>The protocols are maintained by the <strong>Internet Engineering Task Force</strong> (IETF).</p>

<h3>A summary of four-layer model</h3>

<ol>
<li>Application: authentication, compression, and end user services</li>
<li>Transport: handles the flow of data between systems and provides access to the network for applications via the BSD socket library</li>
<li>Network: packet routing</li>
<li>Link: Kernel OS/device driver interface to the network interface on the computer.</li>
</ol>


<p><a href="http://searchnetworking.techtarget.com/news/851291/TCP-Internet-Protocol-and-OSI">source</a></p>

<h3>More details</h3>

<p><strong>The Application layer</strong>:</p>

<ol>
<li>where applications create user data and communicate with other applications on another host (make use of Transport Layer to provide reliable or unreliable pipes to other processes).</li>
<li>different application architecture, such as the client-server model and peer-to-peer.</li>
<li>SMTP, FTP, SSH, HTTP all operate above this layer.</li>
<li>processes are addressed via ports.</li>
</ol>


<p><img class="middle" src="http://okckd.github.io/assets/images/network-ports.gif"></p>

<blockquote><p>Well-known official port numbers are in the range of 0 &ndash; 255. Port 256 &ndash; 1023 are reserved for other well-known services. 1024 &ndash; 65535 are neither in-use nor reserved. They are used when TCP/IP automatically assigns port numbers to client programs.</p></blockquote>

<p><strong>The Transport Layer</strong>:</p>

<ol>
<li>performs host-to-host communications.</li>
<li>&ldquo;UDP&rdquo; provides unreliable datagram service.</li>
<li>&ldquo;<strong>Transmission Control Protocol</strong>&rdquo; provides flow-control, connection establishment, and reliable transmission of data.</li>
</ol>


<p><strong>The Internet layer</strong>:</p>

<ol>
<li>exchange datagrams across network boundaries.</li>
<li>establishes internetworking thus establishes the Internet.</li>
<li>&ldquo;<strong>Internet Protocol</strong>&rdquo;, defines IP addresses and the routing structures used for the TCP/IP protocol suite.</li>
<li>routing: transport datagrams to the next IP router that has the connectivity to a network closer to the final data destination.</li>
</ol>


<p><strong>The Link layer</strong>:</p>

<ol>
<li>defines the networking methods within local network link without intervening routers.</li>
<li>describe local network topology and the interfaces needed to effect transmission of Internet layer datagrams to next-neighbor hosts.</li>
</ol>


<h3>Difference from OSI</h3>

<p>The Internet protocol suite was in use <strong>before the OSI model</strong>, and is well established worldwide.</p>

<p><a href="http://electronicdesign.com/what-s-difference-between/what-s-difference-between-osi-seven-layer-network-model-and-tcpip">The OSI model</a>, however, is a proven concept that is used in all other data communications protocols. It will continue to be used as a guideline for all other communications applications.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Leetcode] Leetcode Second Round (2)]]></title>
    <link href="http://okckd.github.io/blog/2014/08/06/Leetcode-second-two/"/>
    <updated>2014-08-06T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/06/Leetcode-second-two</id>
    <content type="html"><![CDATA[<h3>2.2 questionlist</h3>

<ol>
<li>Integer to Roman</li>
<li>Surrounded Regions &ndash; minimize stack usage</li>
<li>Jump Game II</li>
<li>Gas Station</li>
</ol>


<h3>Question List</h3>

<ol>
<li>Longest Palindromic Substring</li>
<li>Rotate List</li>
<li>Remove Duplicates from Sorted Array</li>
<li>Validate Binary Search Tree &ndash; use intervals</li>
<li>Gray Code</li>
<li>Combination Sum II</li>
<li>Merge Intervals</li>
<li>Scramble String</li>
<li>Remove Duplicates from Sorted Array II</li>
<li>Generate Parentheses</li>
<li>Permutation Sequence</li>
<li>Substring with Concatenation of All Words</li>
<li>String to Integer (atoi)</li>
</ol>


<h3>Difficult</h3>

<ol>
<li>Reverse Words in a String</li>
<li>Word Search</li>
<li>Container With Most Water</li>
<li>First Missing Positive &ndash; note there&rsquo;s 1 special case</li>
<li>Sort List</li>
<li>Merge k Sorted Lists &ndash; very difficult</li>
<li>Permutations II &ndash; use different DS for flagging elements</li>
<li>Palindrome Partitioning II</li>
<li>Word Ladder</li>
<li>Largest Rectangle in Histogram</li>
<li>Minimum Window Substring &ndash; difficult</li>
<li>Longest Valid Parentheses &ndash; difficult</li>
<li>Median of Two Sorted Arrays &ndash; difficult</li>
<li>Regular Expression Matching</li>
<li>Wildcard Matching</li>
</ol>


<h3>Special</h3>

<ol>
<li><p>water, rain and histogram etc.</p></li>
<li><p>word and string-related</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] HTTP Headers]]></title>
    <link href="http://okckd.github.io/blog/2014/08/06/HTTP-headers/"/>
    <updated>2014-08-06T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/06/HTTP-headers</id>
    <content type="html"><![CDATA[<h2>Overview</h2>

<p><strong>HTTP is an Application Layer protocol</strong> which stands for &ldquo;Hypertext Transfer Protocol&rdquo;. The entire World Wide Web uses it.</p>

<p>There&rsquo;re <strong><a href="http://www.differencebetween.net/technology/internet/difference-between-tcp-and-http/">a series of sessions</a></strong> in HTTP where client sends a request and server sends a reply message back to client including the request, an error message, or another piece of information.</p>

<p><a href="http://code.tutsplus.com/tutorials/http-headers-for-dummies--net-8039">HTTP headers</a> are the core part of these HTTP requests and responses, and they carry information about the client browser, the requested page, the server and more.</p>

<h3>Example HTTP request</h3>

<pre><code>GET /tutorials/other/top-20-mysql-best-practices/ HTTP/1.1
Host: net.tutsplus.com
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.5) Gecko/20091102 Firefox/3.5.5 (.NET CLR 3.5.30729)
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Cookie: PHPSESSID=r2t5uvjq435r4q7ib3vtdjq120
Pragma: no-cache
Cache-Control: no-cache
</code></pre>

<h3>Example HTTP response</h3>

<pre><code>HTTP/1.x 200 OK
Transfer-Encoding: chunked
Date: Sat, 28 Nov 2009 04:36:25 GMT
Server: LiteSpeed
Connection: close
X-Powered-By: W3 Total Cache/0.8
Pragma: public
Expires: Sat, 28 Nov 2009 05:36:25 GMT
Etag: "pub1259380237;gz"
Cache-Control: max-age=3600, public
Content-Type: text/html; charset=UTF-8
Last-Modified: Sat, 28 Nov 2009 03:50:37 GMT
X-Pingback: http://net.tutsplus.com/xmlrpc.php
Content-Encoding: gzip
Vary: Accept-Encoding, Cookie, User-Agent

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
&lt;title&gt;Top 20+ MySQL Best Practices - Nettuts+&lt;/title&gt;
&lt;!-- ... rest of the html ... --&gt;
</code></pre>

<p>These HTTP requests are also sent and received for other things, such as images, CSS files, JavaScript files etc. That is why browser may send 40 or more HTTP requests for 1 article page.</p>

<h3>Request Methods</h3>

<p>The three most commonly used request methods are: GET, POST and HEAD.</p>

<h4>GET: Retrieve a Document</h4>

<p>Get an article site:</p>

<pre><code>GET /tutorials/other/top-20-mysql-best-practices/ HTTP/1.1
</code></pre>

<p>Submit a form information:</p>

<pre><code>GET /foo.php?first_name=John&amp;last_name=Doe&amp;action=Submit HTTP/1.1
</code></pre>

<p>Each input is added in the <strong>query string</strong>.</p>

<h4>POST: Send Data to the Server</h4>

<p>Even though you can send data to the server using GET and the query string, <strong>in many cases POST will be preferable</strong>. Sending large amounts of data using GET is not practical and has limitations.</p>

<pre><code>POST /foo.php HTTP/1.1
Host: localhost
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.1.5) Gecko/20091102 Firefox/3.5.5 (.NET CLR 3.5.30729)
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,en;q=0.5
Accept-Encoding: gzip,deflate
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive: 300
Connection: keep-alive
Referer: http://localhost/test.php
Content-Type: application/x-www-form-urlencoded
Content-Length: 43

first_name=John&amp;last_name=Doe&amp;action=Submit
</code></pre>

<p>The header contains no query string no more. The last line (data) is the query string.</p>

<h4>HEAD: Retrieve Header Information</h4>

<p>HEAD is identical to GET, except the server does not return the content in the HTTP response. It&rsquo;s faster than GET.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Connect Nodes and Avoid Intersect]]></title>
    <link href="http://okckd.github.io/blog/2014/08/06/Connect-nodes-avoid-intersect/"/>
    <updated>2014-08-06T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/06/Connect-nodes-avoid-intersect</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.careercup.com/question?id=5138832865361920">link</a></p>

<blockquote><p>Draw a graph as a graph. Assume there is graphics library to draw lines and all. Just tell how will you order the vertices such that the edges don&rsquo;t intersect and they seem ordered.</p></blockquote>

<h3>Solution</h3>

<p>There&rsquo;s no clear solution. Someone suggest the following:</p>

<ol>
<li>printing topological sort result (refer to post &lsquo;Topology Sort&rsquo;)</li>
<li>edges should not intersect, finding if a graph is planar</li>
</ol>


<p>There&rsquo;s various <a href="http://en.wikipedia.org/wiki/Planarity_testing">Planarity Testing Algorithms</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Ambiguous File Matching]]></title>
    <link href="http://okckd.github.io/blog/2014/08/06/Ambiguous-File-Matching/"/>
    <updated>2014-08-06T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/06/Ambiguous-File-Matching</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://www.careercup.com/question?id=5678301561487360">link</a></p>

<blockquote><p>Given 10 files (text files) each of size of 900 Mb.</p>

<p>Given another file named &ldquo;hello&rdquo;. match the contents of this file with other 10 file and return the file whose contents closely match with the contents of file &ldquo;hello&rdquo;.</p></blockquote>

<h3>Solution</h3>

<p>The solution given on the site is not adequate, but I have to choose one that make a little sense.</p>

<blockquote><p>Score each file&rsquo;s contents on several parameters:</p>

<ol>
<li>no. of words</li>
<li>no. of letters</li>
<li>no. of spaces</li>
<li>count of each of the letters</li>
<li>count of each words</li>
</ol>


<p>Give weightage to each of the properties and arrive at a number (score). The closest of the scores is the answer.</p></blockquote>

<p>I think maybe can use <a href="http://en.wikipedia.org/wiki/Bloom_filter#Counting_filters">Counting Bloom Filter</a>, although bloom filter does not record word sequences.</p>
]]></content>
  </entry>
  
</feed>
