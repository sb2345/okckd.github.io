<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Shuatiblog.com]]></title>
  <link href="http://www.shuatiblog.com/atom.xml" rel="self"/>
  <link href="http://www.shuatiblog.com/"/>
  <updated>2015-08-30T00:53:10+08:00</updated>
  <id>http://www.shuatiblog.com/</id>
  <author>
    <name><![CDATA[CodeMonkey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[NineChap Sys] System Design Class 3 ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/08/28/design-class-3/"/>
    <updated>2015-08-28T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/08/28/design-class-3</id>
    <content type="html"><![CDATA[<h1>Question 0, how to solve raido-play failures?</h1>

<p>Failure rate</p>

<pre><code>&gt; = % user who can't listen to music properly

&gt; = # user who fail to plya one song / # total users
</code></pre>

<p>Misson: reduce failure rate.</p>

<h2>How does server identify a user?</h2>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-http-request-overview.png"></p>

<blockquote><p>If a server uses <strong>Cookie</strong> to identify unique users, the result might be > real users.</p>

<p>However, if server uses <strong>IP address</strong>, the result might be &lt; real users.</p></blockquote>

<h2>How to collect data for failure rate</h2>

<h3>Version 1</h3>

<p>Log:</p>

<ol>
<li>user send a log to server when it visits</li>
<li>user send another log after it plays a song</li>
<li>we can identify users who failed to play a song</li>
</ol>


<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-server-failure-rate-1.png"></p>

<blockquote><p>In fact, everything should be logged, including play, pause, switch song, refresh etc.</p></blockquote>

<h3>Version 2</h3>

<p>User login are, in fact, <strong>automatically logged</strong> when user visits. Thus user ONLY have to send log <strong>after it plays music</strong>.</p>

<h2>Summary</h2>

<ol>
<li>define failure rate</li>
<li>user cookie to identify user</li>
<li>use log to collect failure data</li>
<li>analysis pattern of failure againt date/time</li>
</ol>


<h1>Question 1, the process of playing music</h1>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-web-browser-17-steps.png"></p>

<ol>
<li>Prepare</li>
<li>Send DNS request</li>
<li>Prepare DNS reply</li>
<li>Send DNS reply</li>
<li><p>Process DNS reply</p>

<p> &ndash;</p></li>
<li><p>Send webpage request</p></li>
<li>Prepare webpage reply</li>
<li>Send webpage reply</li>
<li><p>Process webpage</p>

<p> &ndash;</p></li>
<li><p>Request music player</p></li>
<li>Prepare music player</li>
<li>Send music player</li>
<li><p>Process music player</p>

<p>&ndash;</p></li>
<li><p>Request MP3</p></li>
<li>Prepare MP3</li>
<li>Send MP3</li>
<li>Play MP3</li>
</ol>


<p>What is process Music Play?</p>

<blockquote><p>Local browser will do rendering, flash decoding etc. If any point of this 17 steps went wrong, the music-play fails.</p></blockquote>

<p>Is there a system/browser default Music Play?</p>

<blockquote><p>HTML player is, but flash player is not. So the flash module have to be requested every time.</p></blockquote>

<h2>Real data: failure rate 20%</h2>

<p>In practise, the real failure rate is 20%. Which is:</p>

<ol>
<li>8% DNS</li>
<li>5% Web</li>
<li>5% MP3</li>
<li>2% Player</li>
</ol>


<h1>Question 2, fix DNS problem</h1>

<p>First of all, how to find out DNS failures? There are 2 ways. First way, help desk do it. Second way is to use the Desktop app to help detect the host address.</p>

<h2>Step 1. HOSTs hijack</h2>

<p>Some users&#8217; host file can modified by competitors.</p>

<ol>
<li>ping the website url</li>
<li>modify host file manually or by desktop app</li>
</ol>


<h2>Step 2. ISP</h2>

<p>Each ISP have different DNS service. Eg. CSTNET fails to update the latest DNS, after a server change.</p>

<p>After this step, DNS failure rate fall from 8% to 1%. Why still 1%? Some companies bans music play in company web.</p>

<h1>Question 3, fix the web problem</h1>

<p>Highest failure rate:</p>

<ol>
<li>3pm office hour</li>
<li>9pm highest bandwidth nation-wide</li>
</ol>


<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-web-failure-graph.png"></p>

<h2>Solution 1, reverse proxy</h2>

<p>Reverse proxy w/ more servers. Reverse proxy acts like a load balancer.</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-reverse-proxly.png"></p>

<blockquote><p><strong><a href="https://en.wikipedia.org/wiki/Reverse_proxy">Reverse proxy</a></strong> is a type of proxy server that retrieves resources on behalf of a client from one or more servers. These resources are then returned to the client as though they originated from the proxy server itself.</p></blockquote>

<p><a href="https://www.nginx.com/resources/glossary/reverse-proxy-server/">Common uses for a reverse proxy server</a> include:</p>

<blockquote><ol>
<li><p>Load balancing</p>

<p>act as a “traffic cop,” sitting in front of your back-end servers and client requests. Try to <strong>maximizes speed and capacity utilization</strong> while ensuring <strong>no one server is overloaded</strong>.</p>

<p>If a server goes down, the load balancer redirects traffic to the remaining online servers.</p></li>
<li><p>Web acceleration</p>

<p> can compress inbound and outbound data, as well as <strong>cache commonly requested content</strong></p>

<p> also perform additional tasks such as SSL encryption to take <strong>load off of your web servers</strong></p></li>
<li><p>Security and anonymity</p>

<p> By intercepting requests headed for your back-end servers, a reverse proxy server protects their identities and acts as an additional defense against security attacks.</p></li>
</ol>
</blockquote>

<h2>Solution 2, reduce size of web page</h2>

<ol>
<li>simplify javascript files</li>
<li>compress images (lower dpi)</li>
<li>merge large images to 1 image (less requests)</li>
<li>lazy loading (Pinterest uses it a lot)</li>
</ol>


<h2>Solution 3, more cacheable pages</h2>

<p> <strong>Change dynamic webpages to static pages</strong>. The advantage of this is:</p>

<ol>
<li>more search engine friendly.</li>
<li>more cache friendly.</li>
</ol>


<h3>Summary on caching</h3>

<p>Caching can happen at place Number 1, 2 and 3:</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-web-hosting-4-layers.png"></p>

<p>AT Number 4, we can add <strong>more servers</strong>. Number 3, <strong>reverse proxy</strong>. Number 2 is <strong>caching within the ISP network</strong>, which avoids requesting info again from backend. Number 1 is <strong>front-end browser cache</strong>.</p>

<p>After this step, Web failure rate fall from 7% to 4%. Why still 4%? Well, these failure is mainly from the junk users created by marketing.</p>

<h1>Question 4, fix MP3 problem</h1>

<p>The process of fetching a MP3 (from CDN):</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-client-request-mp3.png"></p>

<ol>
<li>aquire MP3 link, and send request</li>
<li>send request to CDN</li>
<li>CDN receive request, find MP3</li>
<li>response to client</li>
<li>play the music</li>
</ol>


<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-client-request-mp3-errors.png"></p>

<p>Question: in step 2, there&rsquo;s more Network error, but in step 4, there&rsquo;s no Network error, but Timeout. Why?</p>

<h2>Fix step 2, Network error</h2>

<p>Problem is: MP3 url invalid. It actually comes from a failed CDN sever.</p>

<p>Solution: fix the server.</p>

<h2>Fix step 3, CDN can&rsquo;t find MP3</h2>

<p>Problem associated with <strong>Anti-Leech</strong>.</p>

<blockquote><p><strong><a href="https://en.wikipedia.org/wiki/Leech_(computing">a leech</a>)</strong> is one who benefits, usually deliberately, from others&#8217; information or effort but does not offer anything in return.</p>

<p>Example: Wi-Fi leeches, Direct linking (or hot-linking) and In most P2P-networks, leeching is whose who download too much.</p>

<p><strong><a href="https://answers.yahoo.com/question/index?qid=1006042926419">Anti-Leech</a></strong> specializes in protecting file downloads and stopping bandwidth leeching.</p></blockquote>

<p>See that some P2P and leeching software will steal your url links, so the MP3 url expiration time is 5 minutes.</p>

<p>So when CDN server&rsquo;s clock and web server&rsquo;s clock are not synchronized well, MP3 url can expire.</p>

<p>Solution: every 10 minutes sync CDN clock with web server clock.</p>

<h2>Fix step 4, Timeout error</h2>

<p>Some MP3 are relatively large. Thus timeout.</p>

<blockquote><p>MP3 performs better at higher bps, and aac(Advanced Audio Coding) works better at lower bps.</p></blockquote>

<p>Solution:</p>

<ol>
<li><p>compress MP3 to 48bps, or use aac format. So, play lower-rate music first, then switch automatically.</p></li>
<li><p>pre-load a music while previous is playing.</p></li>
<li><p>optimize CDN</p></li>
</ol>


<blockquote><p><strong><a href="https://en.wikipedia.org/wiki/Content_delivery_network">CDN</a></strong> content delivery network is a large <strong>distributed system of servers</strong> deployed in <strong>multiple data centers</strong> across the Internet.</p>

<p>The goal of a CDN is to serve content to end-users with high availability and high performance.</p></blockquote>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-CDN.png"></p>

<p>Which CDN should client choose?</p>

<blockquote><p>Not DNS, but web server calculates which to choose. It can be calculated using IP distance, or ISP provider, but not accurate.</p>

<p>We can also use local desktop apps (in different locations) to ping CDN servers. This may violate user privacy, though.</p></blockquote>

<h2>Fix step 5, Fail to play</h2>

<p>Problem: some files got wrong decoding.</p>

<h2>Fix step 6, unkown error</h2>

<p>Problem: some users close the page while MP3 loading.</p>

<h1>Question 5, fix player problem</h1>

<p>Problem: iOS device can never play Flash.</p>

<p>Solution: develop HTML5 player.</p>

<h2>5.2 how to evaluate that you solved the problem</h2>

<ol>
<li><p>user complains</p></li>
<li><p><strong>important</strong>: daily retention rate!</p></li>
</ol>


<p>We can&rsquo;t use daily active user, cuz it depends on marketing, competitors, and infrastructure changes.</p>

<p><strong>One day retention rate</strong>:</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-user-retention.png"></p>

<blockquote><p>Today’s visitor = {U1, U3, U7, U9, U10}</p>

<p>Tomorrow&rsquo;s visitor = {U2, U3, U9,}</p>

<p>Today’s one day retention rate = 2/5</p></blockquote>

<h1>Question 6, Miao Sha</h1>

<h2>Design</h2>

<p>Queue A and Queue B</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class3-miao-sha.png"></p>

<h3>Queue A</h3>

<p>Many queues, each one locates on a individual web server or reverse proxy. It is mainly used to accept large amount of requests coming from the clients.</p>

<p>Each machine may takes 10,000 or more requests per second.</p>

<p>Queue A will redirect most requests to a static page (cached).</p>

<h3>Queue B</h3>

<p>Queue B is a single machine, to aviod distributed problems. It takes in small amount of requests and decides results (eg. redirect to payment page).</p>

<blockquote><p>Now, why do we need 2 queues, not 1?</p>

<p>Think about a hospital. Queue A is the hospital lobby and security guard, and Queue B is the queue of patience.</p></blockquote>

<h2>How to reduce traffic</h2>

<ol>
<li>no image</li>
<li>cache more static pages</li>
<li>reverse proxy: batch sending the requests</li>
</ol>


<p>Also, can use front-end javascript to prevent clicking. There are method to bypass, so we need to check IP or do some filtering.</p>

<h2>How to keep it simple?</h2>

<ol>
<li>no DB: basic logic. But rmb to use a log file</li>
<li>no lock</li>
</ol>


<h2>How to improve stability</h2>

<ol>
<li>use new server to do <strong>Miao Sha</strong>, in case of crash</li>
<li>asyc prcessing everything! Don&rsquo;t let other people wait, in case of crash.</li>
</ol>


<h3>How to defent hackers</h3>

<ol>
<li>IP address (to defent auto softwares), but it&rsquo;s easy for hackers to fake IP address</li>
<li>CAPTCHA</li>
</ol>


<blockquote><p><strong><a href="https://en.wikipedia.org/wiki/CAPTCHA">CAPTCHA</a></strong> (an acronym for &ldquo;Completely Automated Public Turing test to tell Computers and Humans Apart&rdquo;) is a type of challenge-response test used in computing to determine whether or not the user is human.</p></blockquote>

<h2>follow-up</h2>

<p>How to design 12306 (several million QPS)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[NineChap Sys] System Design Class 2 ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/08/26/design-class-2/"/>
    <updated>2015-08-26T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/08/26/design-class-2</id>
    <content type="html"><![CDATA[<h1>Overview</h1>

<p>This class covers database design:</p>

<ol>
<li>design data with class and inheritance</li>
<li>design a user system (Netflix 2015)</li>
<li>design a payment system (Yelp, BigCommerce 2015)</li>
</ol>


<h1>Question 1: design account system</h1>

<p><strong>design account (login/out) system</strong> for our radio app.</p>

<h2>Step one, scenario</h2>

<ol>
<li>register, update, remove account</li>
<li>login/out</li>
<li>user balance, VIP services</li>
</ol>


<h2>Step Two, necessary</h2>

<ol>
<li><p>Ask</p>

<ol>
<li>total user: 100 million</li>
<li>daily user: 1 million</li>
</ol>
</li>
<li><p>predict</p>

<ol>
<li>daily active user in 3 month: 10 million</li>
<li>register percentage: 1%</li>
<li>daily new register: 100 thousand</li>
</ol>
</li>
<li><p>more predict</p>

<ol>
<li>login percentage: 15%</li>
<li>average login frequency: 1.2 (ppl may input wrong password 20% of time)</li>
<li>daily login attempts: 10 million * 15% * 1.2 = 1.8 million</li>
<li>average login frequency: 1.8 million / 24hr = 21 login/sec</li>
<li>normal login frequency: 21 * 2 = 42 login/sec</li>
<li>peak login frequency: 42 * 3 = 126 login/sec</li>
</ol>
</li>
</ol>


<h2>Step Three, Application</h2>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class2-app-design.png"></p>

<h2>Step Four, Kilobit</h2>

<p>Data &ndash; User table should contain name and password. What else?</p>

<pre><code>class User {
    int userId; (primary key)
    String name;
    String password;
}
</code></pre>

<p>Data &ndash; User Table</p>

<pre><code>class UserTable {
    list&lt;User&gt; table;

    public insert(){}
    public delete(User){}
    public update(User){}
    public User select(){}
}
</code></pre>

<blockquote><p><strong><a href="https://en.wikipedia.org/wiki/Create,_read,_update_and_delete">CRUD</a></strong>, (Sometimes called SCRUD with an &ldquo;S&rdquo; for Search) are the four basic functions of persistent storage.</p></blockquote>

<h1>Question 2: <strong>verification and forbidden accounts</strong></h1>

<p>We have to know the concept of <strong>Account State Lifecycle Graph</strong>:</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class2-account-life-cycle.png"></p>

<ol>
<li><p>ban: fake user, advertising users&hellip; bannned by the management</p></li>
<li><p>inactive: user choose to suspend his own account, voluntarily.</p></li>
<li><p>delete account: normally we won&rsquo;t remove all related data (just make userId as &ldquo;deleted&rdquo;). Otherwise a lot of data can be violated. All your chatting history <strong>actually remains</strong>.</p></li>
</ol>


<h2>redesign User Table</h2>

<p>Old User table:</p>

<pre><code>class User {
    int userId; (primary key)
    String name;
    String password;
}
</code></pre>

<p>Modified User table:</p>

<pre><code>class User {
    int userId;
    char name[10];
    char hiddenPassword[10];
    int state;
}
</code></pre>

<ol>
<li><p>We added state, to support Account life cycle.</p></li>
<li><p>We changed username to fixed size, for better performance on searching and storing. Can prevent certain attacks, too.</p></li>
<li><p>save encrypted password.</p></li>
</ol>


<h1>Question 3: design login/out process</h1>

<ol>
<li>User account auto logged out after a certain period of time.</li>
<li>multiple account logged in at same time.</li>
</ol>


<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class2-session-life-cycle.png"></p>

<h2>Session</h2>

<p><strong>Session is a conversation</strong> between user and server.</p>

<ol>
<li>User can have >1 session, if he log in from different devices.</li>
<li>Session must be verified, thus we have to keep <strong>sessionId</strong>.</li>
</ol>


<p>Session status: &ldquo;iPad online&rdquo;, &ldquo;PC online&rdquo;&hellip;</p>

<p>Modify User table:</p>

<pre><code>class User {
    int userId;
    char name[10];
    char hiddenPassword[10];
    int state;
    List&lt;session&gt; sessionList;
}
</code></pre>

<p>Important in Session table:</p>

<ol>
<li>device ID</li>
<li><p>time-out period</p>

<p> class Session {
     private sessionId;
     int userId;</p>

<pre><code> int deviceCode;
 long timeOut;
</code></pre>

<p> }</p></li>
</ol>


<p>User table would include a <strong>session list</strong>.</p>

<h2>further improvement: session</h2>

<ol>
<li>we update sessionList very frequently.</li>
<li>size of sessionList is dynamic.</li>
</ol>


<p>Solution: seperate the table.</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class2-user-session-table.png"></p>

<p>Question: When to clean up the session data (considering huge amount of data and frequent calculation)?</p>

<blockquote><p>Answer: every end of day. Or store sessions in-memory, so it lose all the data when machine restarts (it is used in Gaming platforms). Or we can clean up one user&rsquo;s session list whenever the user did a new log-in.</p>

<p>We do not remove session whenever it expires. It&rsquo;s too much calculation.</p></blockquote>

<h2>further improvement: inheritance</h2>

<p>Apply inheritance to UserTable and SessionTable:</p>

<pre><code>class Table {
    list&lt;Row*&gt; table;

    public insert(){}
    public delete(){}
    public update(){}
    public User select(){}
}

class UserTable extends Table {
}

class SessionTable extends Table {
}
</code></pre>

<p>As for the Row class:</p>

<pre><code>class Row {
    List&lt;Attributes&gt; row;
}

class User extends Row {
}

class Session extends Row {
}
</code></pre>

<h1>Question 4: design search algorithm</h1>

<ol>
<li>find my userId</li>
<li>find my userId range</li>
</ol>


<p>Solution 1: add <strong>HashMap</strong> in the table. Can do search in O(1), but can&rsquo;t find range.</p>

<p>Solution 2: <strong>BST data structure</strong>. Can do search range and search in O(log2 n) time.</p>

<h2>Best solution: B+ tree</h2>

<p><strong><a href="https://en.wikipedia.org/wiki/B%2B_tree">B+ tree</a></strong> &ndash; everything in O(logb n) which is <strong>close to constant time</strong>.</p>

<p>Plus, B+ tree is hard disk friendly. Read more on a future post.</p>

<h1>Question 5: support VIP services</h1>

<p>User could buy VIP services using his acccount balance.</p>

<pre><code>class ProService {
    int userId;
    double money;
    long endTime;

    public addMoney(){}
    public buyPro(){}
}
</code></pre>

<h2>Q5.1: System crash when purchasing VIP</h2>

<p>Solution: <strong>transaction with log</strong></p>

<pre><code>WriteLOG
Transaction_1123: BEGIN
money=20; endTime=16_07_2016
</code></pre>

<p>If system crash happens here, system will read the log, recover and roll back all original data. Try not to complete the transaction &ndash; just fail it.</p>

<pre><code>WriteLOG
Transaction_1123: BEGIN
money=20; endTime=16_07_2016
WriteLOG
Transaction_1123: END
money=10; endTime=16_08_2016
</code></pre>

<blockquote><p>What happens if system crash during writing the log? or during the rollback?</p></blockquote>

<h2>Q5.2: dataset contains bad data</h2>

<ol>
<li>one user id have 2 corresponding pro-services information.</li>
<li>Shallow user: a pro-services info does not have corresponding user.</li>
</ol>


<p>Solution: have a checker class.</p>

<h2>Q5.3: simutaneous purchase by 2 users</h2>

<p>Solution: lock.</p>

<ol>
<li>first process lock money &amp; endTime.</li>
<li>Read money = 20</li>
<li>another process try to lock, but end up waiting (sleeping).</li>
<li>first process do the job, and release the lock.</li>
<li>another process wakes up.</li>
</ol>


<blockquote><p>lock have time-out settings. It can be applied in distributed system as well.</p></blockquote>

<p>Question: does lock make your execution slow?</p>

<ol>
<li><p>If another process is sleeping, CPU will be fully consumed by other process. So it won&rsquo;t impact.</p></li>
<li><p>You can do some async processing, too.</p></li>
<li><p>When you lock, try to lock only a small piece of code, not the entire method. In DB, lock only a row, not a table.</p></li>
<li><p>Java <a href="https://en.wikipedia.org/wiki/Compare-and-swap">CAS</a> (Compare and swap )</p></li>
</ol>


<h2>Q5.4: Server crash</h2>

<p>Solution: duplication.</p>

<ol>
<li><p>How many copies?</p>

<p> Google did 3. Normally 2 in same data center, and 1 in another location.</p>

<p> Backup data normally is on another machine. But there&rsquo;s also <a href="https://en.wikipedia.org/wiki/RAID">RAID</a> (redundant array of independent disks) which:</p>

<blockquote><p>combines multiple physical disk drive components into a single logical unit for the purposes of <strong>data redundancy, performance improvement</strong>, or both.</p></blockquote></li>
<li><p>When does the copy happen?</p>

<p> Option 1 is <strong>doing everyday nightly</strong>. This is called a &lsquo;check point&rsquo;.</p>

<p> Option 2 is use another server to support <strong>Shadow Redundancy</strong>. All data from Machine 0 will be copied to Machine 1 WHILE it happens. The result is, Machine 1 is identical to Machine 0. If Machine 0 crashes, Machine 1 may be behind less than 1 second.</p>

<p> The way to duplicate is either re-play all the actions, or to read Machine 0&rsquo;s log and apply the new data.</p></li>
<li><p>How to copy?</p>

<p> User send data to 1 server, and from that server, pipeline. This ensures good usage of server bandwith, and serial transfer of data ensures low latency (several ms).</p>

<p> It&rsquo;s also possible to do tree-like transfer, but the above method is preferred cuz all machine consume same bandwidth.</p></li>
<li><p>What is log?</p>

<p> It is actually &lsquo;checkpoint&rsquo; + log. It allows you to rollback.</p></li>
</ol>


<p>Data redundancy &ndash; Summary:</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class2-data-redundancy-1.png"></p>

<h2>Final note: Data inconsistency</h2>

<p>Main sources of inconsistency comes from:</p>

<ol>
<li>network fault</li>
<li>disk error</li>
</ol>


<p>The disk eror is solved by <strong>checksum</strong> (compare during disk writing).</p>

<h1>Summary</h1>

<p><strong><a href="https://en.wikipedia.org/wiki/ACID">ACID</a> (Atomicity, Consistency, Isolation, Durability)</strong>  is a set of properties that guarantee that database transactions are processed reliably.</p>

<ol>
<li><p><strong>Atomicity: all or nothing</strong></p>

<p> Q5.1: System crash when purchasing VIP</p></li>
<li><p><strong>Consistency</strong>: validate according to defined rules</p>

<p> Q5.2: dataset contains bad data</p></li>
<li><p><strong>Isolation</strong>: independency between transactions <strong>(lock)</strong></p>

<p> Q5.3: simutaneous purchase by 2 users</p></li>
<li><p><strong>Durability</strong>: stored permanently</p>

<p> Q5.4: Server crash</p></li>
</ol>


<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class2-summary.png"></p>

<p>Additional Questions:</p>

<ol>
<li>design a user system (Netflix 2015)</li>
</ol>


<p>Hint: table design, register, login/out, password check, find password.</p>

<ol>
<li>Design payment system (Yelp, BigCommerce 2015)</li>
</ol>


<p>Hint: the question does not ask about table/ds design itself, but rather the problems associated with payment. Read about ACID principle.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Java OOP] Three Properties of Class/Object ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/08/24/three-property-object/"/>
    <updated>2015-08-24T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/08/24/three-property-object</id>
    <content type="html"><![CDATA[<h1>Objects</h1>

<p>Much of the power and flexibility of modern software analysis and design derives from its use of objects.</p>

<h1>Classes</h1>

<p>Classes create an abstract representation of the world, letting you discard unnecessary details.</p>

<h1>The 3 properties</h1>

<h2>Class</h2>

<ol>
<li><p>properties</p></li>
<li><p><strong>behavior</strong></p></li>
<li><p>relationships to other objects</p></li>
</ol>


<h2>Object</h2>

<ol>
<li><p>state</p></li>
<li><p><strong>behavior</strong></p></li>
<li><p>identity</p></li>
</ol>


<p>Ref: <a href="http://javadevwannabe.blogspot.sg/2012/02/state-behavior-and-identity.html?m=1">http://javadevwannabe.blogspot.sg/2012/02/state-behavior-and-identity.html?m=1</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[NineChap Sys] System Design Class 1 ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/08/23/design-class-1/"/>
    <updated>2015-08-23T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/08/23/design-class-1</id>
    <content type="html"><![CDATA[<h1>System Design</h1>

<h2>defination</h2>

<p>the process of defining the <strong>architecture, components, modules, interfaces and data</strong> to satisfy specified <strong>requirements</strong>.</p>

<ol>
<li>conceptual design (macro)</li>
<li>logical design</li>
<li>physical design (micro)</li>
</ol>


<h3>Top-down design</h3>

<p>Eg. MS Office, Huawei Security System</p>

<h3>Bottom-up design</h3>

<p>Most start-up use, MVP first using Medetor + MongoDb.</p>

<h2>5 steps (SNAKE Principle):</h2>

<ol>
<li><strong>Scenario</strong>: case/interface &ndash; input</li>
<li><strong>Necessary</strong>: constrain/hypothesis &ndash; input</li>
<li><strong>Application</strong>: service/algorithm &ndash; output</li>
<li><strong>Kilobit</strong>: data &ndash; output</li>
<li><strong>Evolve</strong> &ndash; solution</li>
</ol>


<h1>A top-down example</h1>

<p>Example one: <strong>design a radio</strong></p>

<h2>Step One, Scenario</h2>

<ol>
<li><p>brain storm</p>

<ol>
<li>register/log in</li>
<li>play music</li>
<li>recommendation</li>
</ol>
</li>
<li><p>prioritize</p>

<ol>
<li>play music

<ol>
<li>Get channel</li>
<li>select a channel</li>
<li>play</li>
</ol>
</li>
</ol>
</li>
</ol>


<h2>Step Two, Necessary</h2>

<ol>
<li><p>ask</p>

<ol>
<li>total user &ndash; 100,000,000</li>
<li><strong>daily users &ndash; 1,000,000</strong></li>
</ol>
</li>
<li><p>predict</p>

<ol>
<li>user analysis</li>
<li>Traffic analysis</li>
<li>Memory analysis</li>
<li>QPS</li>
</ol>
</li>
</ol>


<p>Details:</p>

<ol>
<li><p>user analysis</p>

<blockquote><p>Avg Concurrent users = daily users <strong>/ 5</strong> = 200,000</p>

<p>Peak Concurrent users = concurrent user <strong>* 3</strong> = 600,000</p></blockquote>

<p> considering your product may grow in the next 3 month:</p>

<blockquote><p>Max Peak users in 3 month = Peak users <strong>* 10</strong> = 6,000,000</p></blockquote></li>
<li><p>Traffic analysis</p>

<blockquote><p>Request of new music per user: 1 music/min</p>

<p>Music size = 3MB</p>

<p>Max peak traffic (in 3 months) = 6,000,000 * 3MB / 60 = 300GB/s</p></blockquote></li>
<li><p>Memory analysis</p>

<blockquote><p>Memory per user (metadata) = 10KB</p>

<p>Max daily memory = 1,000,000 * 10 * 10 = 100 million KB = 100GB</p>

<p>(10 times of avg daily user)</p></blockquote></li>
</ol>


<h2>Step Three, Application</h2>

<ol>
<li>Replay the case, one service for each</li>
<li>Merge the services</li>
</ol>


<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class1-basic-receptionist.png"></p>

<h2>Step Four, Kilobit: data</h2>

<ol>
<li><p>Append 1 dataset for each service</p>

<p> Eg. User service: stability, more addition, less modify and deletion.</p>

<p> Eg. Channel Service: high concurrency, MongoDB</p>

<p> Eg. Music Service: MP3 File Systems</p></li>
</ol>


<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class1-reco-5.png"></p>

<h2>Last Step, Evolve</h2>

<ol>
<li><p>Better: constrains</p>

<p> eg. able to handle 300GB/s traffic?</p></li>
<li><p>Broader: new cases</p>

<p> share music? delete user account?</p></li>
<li><p>Deeper: details design</p></li>
</ol>


<p>From views of <strong>Performance, Scalability and Robustness</strong>.</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class1-snake.jpg"></p>

<h1>A bottom-up example</h1>

<p>Example two: <strong>design a recommendation module</strong></p>

<h2>A simple algo:</h2>

<pre><code>u1={m3,m5,m7,m11}
u2={m1,m2,m3,m4,m5,m6,m7,m8,m9}
Similarity( u1, u2 ) = 3
</code></pre>

<p>m &ndash; music</p>

<p>u &ndash; user</p>

<p>Similarity = # of same music for different users</p>

<h2>Adv algo:</h2>

<p>find his <strong>top-1 similar user</strong>. Stay tuned for future posts.</p>

<h2>Use the 5 Steps (SNAKE)</h2>

<ol>
<li>Step One, Scenario</li>
<li>Step Two, Necessary</li>
<li>Step Three, Application</li>
<li>Step Four, Kilobit: data</li>
<li>Last Step, Evolve</li>
</ol>


<p>Because this question is relatively easy, we will not do case-analysis (Macro).</p>

<p><strong>Instead, we do micro design</strong> by starting at the interface.</p>

<h2>Step One, Scenario</h2>

<p>Interface</p>

<pre><code>class Recommender {
    public int findSimilarUser(int userId) {
        //
    }
}
</code></pre>

<h2>Step Two, Necessary</h2>

<ol>
<li><p>ask</p>

<ol>
<li>total users = 100,000,000</li>
<li>total music = 10,000,000</li>
<li>peak users in 3 month = 6,000,000</li>
</ol>


<p> However, not everyone is logged in. Thus we won&rsquo;t need to recommend for everybody. On average, the logged-in ratio is 1% &ndash; 30%. Let&rsquo;s assume 5%.</p>

<ol>
<li>participation percentage = 5%</li>
</ol>


<p> And user&rsquo;s interest won&rsquo;t change every minute. Let&rsquo;s recalculate only after 10 minutes.</p>

<ol>
<li>calculation frequency = 1 update/10min/user</li>
</ol>
</li>
<li><p>predict</p>

<ol>
<li>user analysis (skip)</li>
<li>Traffic analysis (skip)</li>
<li>Memory analysis (skip)</li>
<li>QPS</li>
</ol>


<p> Peak QPS = 6,000,000 * 5% / (10 * 60) = 500/s</p></li>
</ol>


<h2>Step Three, Application</h2>

<p><strong>The simpliest algorithm: BF compare</strong>. The complexity is O(m n) for each user, where m is # of music a person likes, and n is # of total users. For k users, it takes O(k m n) time (k can be = peak concurrent users).</p>

<p>This is roughly 0.2s per user. Thus <strong>Max QPS = 5</strong>.</p>

<blockquote><p>One word about complexity-to-seconds estimation.</p>

<p>O(n ^ 3) &ndash;> 1s</p>

<p>O(n ^ 2) &ndash;> 0.2s</p>

<p>O(n) &ndash;> 20ms</p>

<p>O(k) &ndash;> k ms</p></blockquote>

<h2>Step Four, Kilobit: data</h2>

<p>Very simple:</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class1-reco-1.png"></p>

<h2>Last Step, Evolve</h2>

<p>Read on.</p>

<h1>How to go from Level 0 to Level 1</h1>

<p>Refer to the previous question. How can we improve???</p>

<ol>
<li>performance</li>
<li>scalability</li>
<li>robustness</li>
</ol>


<h2>performance</h2>

<p>A better algo: Inverted Index</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class1-reco-2.png"></p>

<p>Avg performance increase to ~ 20ns (with some optimization of MapReduce procedure, discuss later).</p>

<p><strong>Max QPS increase to 50</strong>.</p>

<h2>scalability</h2>

<p>Use a <strong>dispatcher</strong> to re-direct the requests to multiple machines.</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class1-reco-3.png"></p>

<h3>How many machines do we need then?</h3>

<p>Well we need 500 QPS. The algo above achieves ~ 50 QPS. <strong>Should we need 10 machines</strong>?</p>

<p>The answer is NO. A machine with 8 (or 16) core CPU could be able to handle.</p>

<p>We can also have a <strong>hot-standby</strong>, to be safe.</p>

<blockquote><p>hot standby is used as a failover mechanism to provide reliability in system configurations.</p>

<p>When a key component fails, the hot spare is switched into operation.</p></blockquote>

<h2>robustness</h2>

<p>Tips about system design for senior engineers:</p>

<blockquote><p><strong>Draw 1 machine first</strong>. This machine can contains multiple datasets and run multiple processes.</p>

<p>On top of this machine, the interface layer is <strong>one single Manager process</strong>. The Manager is in charge of almost everything: handling data lost, handle high concurrency, copy multiple instance of itself&hellip;</p>

<p>Like this:</p></blockquote>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class1-reco-6.png"></p>

<h3>Back-end</h3>

<p>Now we need <strong>a cluster of datasets</strong> (which has Manager on top of it), and <strong>a cluster of Recommenders</strong>. Manager is in charge of copying multiple instances.</p>

<p>Dataset can be put in different physical locations. Recommender don&rsquo;t really need, cuz it&rsquo;s only do calculation job.</p>

<h3>Receiving requests</h3>

<p>Just now we used <strong>Receptionist (or Dispatcher)</strong> to handle request. Now we use a <strong>Web service</strong> (eg. Apache). It&rsquo;s not necessary to make it a cluster.</p>

<h3>Big Brother</h3>

<p>We need a <strong>monitor system</strong> to oversee everything.</p>

<p>Also, Big Brother is in charge of heart-beat. If not received, Big Brother have some double-check machanism.</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/design-class1-reco-4.png"></p>

<h3>Connecting the dots</h3>

<p><strong>Dispatcher</strong> is used to connect the 4 components. It&rsquo;s like a messaging queue that collects and distributes jobs among everybody (eg. control and distributed info).</p>

<p>It can be stateful or stateless.</p>

<p>Keep in mind <strong>the connection between Dataset and Recommender</strong> remains. It&rsquo;s slow going thru Dispatcher.</p>

<h3>Distribute it</h3>

<p>During development, the 5 components can be put on same machine. When we deploy distributely, we use <strong>Socket connection (keep alive)</strong> to connect them.</p>

<p>Notice the Web Service is <strong>connection heavy</strong>, which consume large CPU and RAM resource. It&rsquo;s better to seperate to one machine.</p>

<p>Big brother is read/write heavy, so it&rsquo;s OKAY to put on same machine with Dispatcher.</p>

<p>Since Dataset and Recommender have data exchange, it&rsquo;s a good idea to put on same machine.</p>

<h3>Additional questions</h3>

<p>Implement Dispatcher with <strong>consumer-producer</strong> model.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] How is Pipe implemented in Unix/Linux ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/07/23/how-is-pipe-implemented-unix/"/>
    <updated>2015-07-23T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/07/23/how-is-pipe-implemented-unix</id>
    <content type="html"><![CDATA[<h1>Overview</h1>

<p>In Unix-like OS, <strong><a href="https://goo.gl/0NAqd9">a pipeline is a set of processes</a> chained by their standard streams</strong>, so that the output of each process (stdout) feeds directly as input (stdin) to the next one.</p>

<p><a href="http://stackoverflow.com/a/17503877">Pipes are unidirectional byte streams which connect the standard output</a> from one process into the standard input of another process. <strong>Neither process is aware of this redirection</strong> and behaves just as it would normally. It is the shell which sets up these temporary pipes between the processes.</p>

<h1>Process</h1>

<ol>
<li><p>Linux has a VFS called <strong>pipefs</strong> that is mounted in the kernel (not in user space)</p>

<blockquote><p><strong><a href="http://www.linux.org/threads/pipefs-sockfs-debugfs-and-securityfs.5383/">PipeFS</a></strong> is a unique virtual filesystem. <strong>This filesystem is mounted inside the kernel</strong> rather than in the userspace. While most filesystems are mounted under &ldquo;/&rdquo;, PipeFS is mounted on &ldquo;pipe:&rdquo;, <strong>making PipeFS its own root</strong> (yes, a second root filesystem).</p>

<p>This filesystem is one superblock and cannot exceed that amount system-wide. The entry point of this filesystem/second-root is the system-call &ldquo;pipe()&rdquo;. Unlike the other virtual/pseudo filesystems, this one cannot be viewed.</p>

<p>Many of you may be wondering what purpose this PipeFS filesystem serves. Unix pipes use this filesystem. When a pipe is used (eg. ls | less), <strong>the pipe() system-call makes a new pipe object on this filesystem</strong>. Without this filesystem, pipes cannot be made.</p>

<p>Also, threads and forks communicate together via pipes. Without PipeFS, processes could not fork and threads could not communicate.</p>

<p>Network pipes also rely on this virtual/pseudo filesystem.</p></blockquote></li>
<li><p>pipefs has a single super block and is mounted at it&rsquo;s own root (pipe:), alongside /</p></li>
<li><p>pipefs cannot be viewed directly unlike most file systems</p></li>
<li><p>The entry to pipefs is via the pipe(2) syscall</p></li>
<li><p>The pipe(2) syscall used by shells for piping with the | operator (or manually from any other process) creates a new file in pipefs which behaves pretty much like a normal file</p></li>
<li><p>The file on the left hand side of the pipe operator has its stdout redirected to the temporary file created in pipefs</p></li>
<li><p>The file on the right hand side of the pipe operator has its stdin set to the file on pipefs</p></li>
<li><p>pipefs is stored in memory and through some kernel magic</p></li>
</ol>


<p>Ref: <a href="http://unix.stackexchange.com/q/148401">http://unix.stackexchange.com/q/148401</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] Cryptographic standard, AES and RSA ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/06/09/Cryptographic-standards-AES-RSA/"/>
    <updated>2015-06-09T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/06/09/Cryptographic-standards-AES-RSA</id>
    <content type="html"><![CDATA[<h1>Overview</h1>

<h2>3 areas of cryptographic standard:</h2>

<ol>
<li><p>encryption standard</p>

<ol>
<li>Data Encryption Standard (obsolete)</li>
<li>Triple DES</li>
<li><strong>Advanced Encryption Standard (AES)</strong></li>
<li><strong>RSA</strong></li>
<li>OpenPGP</li>
<li>CipherSaber</li>
</ol>
</li>
<li><p>hash standard</p>

<ol>
<li><strong>MD5</strong></li>
<li><strong>SHA-1</strong></li>
<li>SHA-2</li>
<li>HMAC</li>
<li>PBKDF2</li>
</ol>
</li>
<li><p>digital signature standard</p>

<ol>
<li>Digital Signature Algorithm (DSA)</li>
<li>RSA</li>
<li>Elliptic</li>
</ol>
</li>
</ol>


<h2>Symmetric-key algorithm</h2>

<p><a href="http://en.wikipedia.org/wiki/Symmetric-key_algorithm">Use the same cryptographic keys</a> for both encryption and decryption.</p>

<p>The keys represent a shared secret between two parties, and maintain a private information link.</p>

<p>This requirement that both parties have access to the secret key is one of the main drawbacks.</p>

<h2>Public-key cryptography</h2>

<p>The public key is used:</p>

<ol>
<li>encrypt plaintext</li>
<li>verify a digital signature</li>
</ol>


<p>private key is used:</p>

<ol>
<li>decrypt ciphertext</li>
<li>create a digital signature.</li>
</ol>


<h1>Encryption standard</h1>

<h2>RSA Vs. AES</h2>

<p><strong>RSA is very computationally expensive</strong> by comparison with AES. It involves mathematics with very large numbers, whilst AES can be implemented with relatively simple bit operations.</p>

<p><a href="http://security.stackexchange.com/questions/10949/encryption-should-i-be-using-rsa-or-aes">RSA is a public-key encryption algorithm</a> (asymmetric), while AES is a symmetric key algorithm. Often a cryptosystem will use both algorithms.</p>

<p><a href="http://stackoverflow.com/questions/13238674/aes-vs-rsa-to-encrypt-large-size-of-data">A good compromise is to</a> use RSA to encrypt the symmetric key that is then used in AES encryption of the larger data.</p>

<h2>GitHub</h2>

<p>uses RSA encryption.</p>

<h1>hash standard</h1>

<h2>MD5</h2>

<p>The MD5 message-digest algorithm is a widely used cryptographic hash function producing a 128-bit (16-byte) hash value, or 32 digit Hex.</p>

<blockquote><p>d &ndash;> 8277e0910d750195b448797616e091ad</p>

<p>good morning &ndash;> 2b849500e4585dab4196ec9a415edf8f</p></blockquote>

<h2>SHA-1</h2>

<p>SHA-1 produces a 160-bit (20-byte) hash value, or 40 digit Hex.</p>

<h2>For more</h2>

<p>About MD5, SHA-1 and other, refer to <strong>[Design] Cryptographic Hash, MD5 and Digital Signature</strong></p>

<h1>digital signature standard</h1>

<p>A valid digital signature gives a recipient confidence that the message was created by a known sender.</p>

<p>commonly used for software distribution, financial transactions</p>

<p><img class="middle" src="http://www.shuatiblog.com/assets/images/digital_signature.png"></p>

<p><a href="http://searchsecurity.techtarget.com/definition/digital-signature">To create a digital signature</a>, signing software (such as an email program) creates a one-way hash of the data to be signed. The private key is then used to encrypt the hash.</p>

<blockquote><p>The reason for encrypting the hash instead of entire message is that a hash function can convert an arbitrary input into a fixed length value, which is usually much shorter.</p></blockquote>

<p>Other party validate the integrity of the data by using the signer&rsquo;s public key to decrypt the hash.</p>

<blockquote><p>Note: you can choose to &lsquo;<strong> Add digital signature to this message </strong>&rsquo; in Microsoft Office.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Design] Linux and TCP ports ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/06/08/linux-and-tcp-ports/"/>
    <updated>2015-06-08T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/06/08/linux-and-tcp-ports</id>
    <content type="html"><![CDATA[<h1>Overview</h1>

<p><a href="http://en.wikipedia.org/wiki/Port_%28computer_networking%29">a port</a> is <strong>a software construct serving as a communications endpoint</strong> in a computer&rsquo;s host operating system.</p>

<p>purpose of ports is to uniquely identify different applications or processes running on a single computer and thereby <strong>enable them to share a single physical connection to a packet-switched network</strong> like the Internet.</p>

<p>The protocols that <strong>primarily use ports</strong> are the Transport Layer protocols, such as TCP and UDP.</p>

<p><strong>Port info can be viewed on Linux /etc/services files</strong>.</p>

<h2>there&rsquo;re only 65536 ports</h2>

<p>In TCP/IP stack, port number field is just 16bit size unsigned integer. Port number thus ranging from 0 to 65535.</p>

<h2>well-known ports</h2>

<p><strong>Well-known ports</strong> (or Privileged Ports) are those from 0 through 1023.</p>

<ul>
<li>20 &amp; 21: File Transfer Protocol (FTP)</li>
<li>22: Secure Shell (SSH)</li>
<li>23: Telnet remote login service</li>
<li>25: Simple Mail Transfer Protocol (SMTP)</li>
<li>53: Domain Name System (DNS) service</li>
<li>80: Hypertext Transfer Protocol (HTTP) used in the World Wide Web</li>
<li>110: Post Office Protocol (POP3)</li>
<li>119: Network News Transfer Protocol (NNTP)</li>
<li>143: Internet Message Access Protocol (IMAP)</li>
<li>161: Simple Network Management Protocol (SNMP)</li>
<li>194: Internet Relay Chat (IRC)</li>
<li>443: HTTP Secure (HTTPS)</li>
<li>465: SMTP Secure (SMTPS)</li>
</ul>


<h2>Socket</h2>

<p><a href="http://www.linuxnix.com/2011/05/important-port-numbers-linux-system-administrator.html">Socket is combination of</a> software Port and IP address.</p>

<h2>Protocol number</h2>

<p>In an IP header, <a href="https://technet.microsoft.com/en-us/library/cc959827.aspx">the Protocol field identifies the service</a> in the next higher level in the protocol stack to which data is passed. <strong>Do not confuse this with port number, which is used for communication by TCP/UDP</strong>.</p>

<table>
<tbody><tr><th>
<p>
Service</p>
</th><th>
<p>
Protocol Number</p>
</th></tr>
<tr><td>
<p>
Internet Control Message Protocol (ICMP)</p>
</td><td>
<p>
1</p>
</td></tr>
<tr><td>
<p>
Transmission Control Protocol (TCP)</p>
</td><td>
<p>
6</p>
</td></tr>
<tr><td>
<p>
User Datagram Protocol (UDP)</p>
</td><td>
<p>
17</p>
</td></tr>
<tr><td>
<p>
General Routing Encapsulation (PPTP data over GRE)</p>
</td><td>
<p>
47</p>
</td></tr>
<tr><td>
<p>
Authentication Header (AH) IPSec</p>
</td><td>
<p>
51</p>
</td></tr>
<tr><td>
<p>
Encapsulation Security Payload (ESP) IPSec</p>
</td><td>
<p>
50</p>
</td></tr>
<tr><td>
<p>
Exterior Gateway Protocol (EGP)</p>
</td><td>
<p>
8</p>
</td></tr>
<tr><td>
<p>
Gateway-Gateway Protocol (GGP)</p>
</td><td>
<p>
3</p>
</td></tr>
<tr><td>
<p>
Host Monitoring Protocol (HMP)</p>
</td><td>
<p>
20</p>
</td></tr>
<tr><td>
<p>
Internet Group Management Protocol (IGMP)</p>
</td><td>
<p>
88</p>
</td></tr>
<tr><td>
<p>
MIT Remote Virtual Disk (RVD)</p>
</td><td>
<p>
66</p>
</td></tr>
<tr><td>
<p>
OSPF Open Shortest Path First</p>
</td><td>
<p>
89</p>
</td></tr>
<tr><td>
<p>
PARC Universal Packet Protocol (PUP)</p>
</td><td>
<p>
12</p>
</td></tr>
<tr><td>
<p>
Reliable Datagram Protocol (RDP)</p>
</td><td>
<p>
27</p>
</td></tr>
<tr><td>
<p>
Reservation Protocol (RSVP) QoS</p>
</td><td>
<p>
46</p>
</td></tr>
</tbody></table>


<blockquote><p><a href="https://learningnetwork.cisco.com/thread/61029">When the IP packet contain TCP data</a> the protocol number field will have the value 6 in it, so the payload will be sent to the TCP stack, TCP would then use the port numbers to send the data to the correct application. The same is for UDP with protocol number 17.</p>

<p>Another way to look at the IP protocol number field is, if we didn&rsquo;t have this field in the IP packet header, IP would only be capable of carrying one type of data, while adding this field allowed the IP to carry multiple types of data differentiated by the protocol number, the same goes for TCP/UDP using TCP/UDP ports to serve multiple applications and Ethernet using the Ethertype, and so on.</p></blockquote>

<h2>can multiple app bind to (or listen to) the same port?</h2>

<p>Can&rsquo;t. <a href="http://stackoverflow.com/questions/1694144/can-two-applications-listen-to-the-same-port">Because You can only have one application</a> listening on a single port at one time.</p>

<blockquote><p>the app opens a port, gets a handle to it, and the OS notifies it (via that handle) when a client connection (or a packet in UDP case) arrives.</p>

<p>If the OS allowed two apps to open the same port, how would it know which one to notify?</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Java OOP] Overload, Override, Compile, Runtime (Static/Dynamic Polymph) ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/05/24/overload-override-compile-runtime/"/>
    <updated>2015-05-24T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/05/24/overload-override-compile-runtime</id>
    <content type="html"><![CDATA[<h1>The master statement</h1>

<p>Overloading is Compile Time and Overriding is Runtime.</p>

<h1>Examples</h1>

<h2>Overloading</h2>

<pre><code>public static class test
{
    static void Main(string[] args)
    {
        Foo();
        Foo("test");
    }

    public static void Foo()
    {
        Console.WriteLine("No message supplied");
    }

    public static void Foo(string message)
    {
        Console.WriteLine(message);
    }
}
</code></pre>

<p>This is called <strong>static (compile-time) polymorphism</strong> because the compiler is aware of exactly which method you are calling.</p>

<h2>Overriding</h2>

<p>When the PrintMessage() function is call, it determines which version of GetMessage() to use at runtime, <strong>based on the type of IMessage</strong> that is passed in.</p>

<pre><code>public static class MessagePrinter
{
    public static void PrintMessage(IMessage message)
    {
        Console.WriteLine(message.GetMessage());
    }
}

public interface IMessage
{
    public string GetMessage();
}

public class XMLMessage : IMessage
{
    public string GetMessage()
    {
        return "This is an XML Message";
    }
}

public class SOAPMessage : IMessage
{
    public string GetMessage()
    {
        return "This is a SOAP Message";
    }
}
</code></pre>

<p>This is <strong>dynamic (runtime) polymorphism</strong>. This is due to the fact that the compiler doesn&rsquo;t necessarily know what type of object is being passed in at compile-time.</p>

<h1>Conclusion</h1>

<h2>Overloading</h2>

<p>Compile time Polymorphism = Static Polymorphism = Early binding</p>

<h2>Overriding</h2>

<p>Runtime Polymorphism = Dynamic Polymorphism = Late binding =</p>

<p>Reference: <a href="http://stackoverflow.com/questions/10915828/how-overloading-is-compile-time-and-overriding-is-runtime">How Overloading is Compile Time and Overriding is Runtime from stackoverflow.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Palantir] Sort Letters Given Lexicographic Order ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/05/21/sort-letters-given-lexicographic-order/"/>
    <updated>2015-05-21T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/05/21/sort-letters-given-lexicographic-order</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="http://quant365.com/viewtopic.php?t=11">link</a></p>

<blockquote><p>Sort the letters in one word by the order they occur in another in linear time.</p></blockquote>

<h3>Solution</h3>

<p>This</p>

<p>text</p>

<p>is</p>

<p>used</p>

<p>to</p>

<p>stop</p>

<p>you</p>

<p>from</p>

<p>looking</p>

<p>at</p>

<p>the</p>

<p>answer</p>

<p>immediately,</p>

<p>which is, to use counting sort</p>

<h3>Code</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 189] Rotate Array ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/05/10/Rotate-Array/"/>
    <updated>2015-05-10T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/05/10/Rotate-Array</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/rotate-array/">link</a></p>

<div class="question-content">
              <p></p><p>Rotate an array of <i>n</i> elements to the right by <i>k</i> steps.</p>
<p>For example, with <i>n</i> = 7 and <i>k</i> = 3, the array <code>[1,2,3,4,5,6,7]</code> is rotated to <code>[5,6,7,1,2,3,4]</code>. </p>

<p><b>Note:</b><br>
Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.
</p>

<p class="showspoilers"><a href="#" onclick="showSpoilers(this); return false;">[show hint]</a></p>
<div class="spoilers" style="display: none;"><b>Hint:</b><br>
Could you do it in-place with O(1) extra space?
</div>

<p>Related problem: <a href="http://www.shuatiblog.com/problems/reverse-words-in-a-string-ii/">Reverse Words in a String II</a></p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/Freezen">@Freezen</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/array/">Array</a>
                  
                </span>
              
            </div>


<h3>Solution</h3>

<p>This question is very standard &ldquo;rotate 3 times&rdquo; solution.</p>

<h3>Code</h3>

<pre><code>public class Solution {
    public void rotate(int[] nums, int k) {
        if (nums == null || nums.length == 0) {
            return;
        }
        int len = nums.length;
        k = k % len;

        reverse(nums, 0, len - k - 1);
        reverse(nums, len - k, len - 1);
        reverse(nums, 0, len - 1);
    }

    void reverse(int[] nums, int start, int end) {
        while (start &lt; end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 190] Reverse Bits ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/05/10/Reverse-Bits/"/>
    <updated>2015-05-10T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/05/10/Reverse-Bits</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/reverse-bits/">link</a></p>

<div class="question-content">
              <p></p><p>Reverse bits of a given 32 bits unsigned integer.</p>

<p>For example, given input 43261596 (represented in binary as <b>00000010100101000001111010011100</b>), return 964176192 (represented in binary as <b>00111001011110000010100101000000</b>).</p>

<p>
<b>Follow up</b>:<br>
If this function is called many times, how would you optimize it?
</p>

<p>Related problem: <a href="http://www.shuatiblog.com/problems/reverse-integer/">Reverse Integer</a></p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/bit-manipulation/">Bit Manipulation</a>
                  
                </span>
              
            </div>


<h3>Analysis</h3>

<p>This question is standard bit manipulation. We essentially get bits one by one from n, and append it to the result.</p>

<p>However, the question ask how to optimize it, to improve its performance. Em, that&rsquo;s interesting.</p>

<h3>Solution</h3>

<p>First code is the standard solution.</p>

<p>I found another interesting solution from <a href="http://www.programcreek.com/2014/03/leetcode-reverse-bits-java/">programcreek</a>, which uses &ldquo;swap bits&rdquo; method. I&rsquo;ve never seen this before, so I posted his solution below.</p>

<p>But is it really a faster solution?</p>

<p>Finally, I found something in <a href="http://bookshadow.com/weblog/2015/03/08/leetcode-reverse-bits/">书影 博客</a>, quoted as below:</p>

<blockquote><p>以4位为单位执行反转，将0x0至0xF的反转结果预存在一个长度为16的数组中，反转时直接查询即可。</p></blockquote>

<p>Thus this is the best solution for performance.</p>

<h3>Code</h3>

<p>My code</p>

<pre><code>public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
        int result = 0;
        for (int i = 0; i &lt; 32; i++) {
            int last = n &amp; 1;
            n &gt;&gt;= 1;
            result &lt;&lt;= 1;
            result = result | last;
        }
        return result;
    }
}
</code></pre>

<p>&ldquo;swap bits&rdquo;</p>

<pre><code>public int reverseBits(int n) {
    for (int i = 0; i &lt; 16; i++) {
        n = swapBits(n, i, 32 - i - 1);
    }

    return n;
}

public int swapBits(int n, int i, int j) {
    int a = (n &gt;&gt; i) &amp; 1;
    int b = (n &gt;&gt; j) &amp; 1;

    if ((a ^ b) != 0) {
        return n ^= (1 &lt;&lt; i) | (1 &lt;&lt; j);
    }

    return n;
}
</code></pre>

<p>Best solution:</p>

<pre><code>char tb[16] = {0,8,4,12,2,10,6,14,1,9,5,13,3,11,7,15};

uint32_t reverseBits(uint32_t n) {
        int curr = 0;
        uint32_t ret = 0;
        uint32_t msk = 0xF;
        for(int i = 0; i &lt; 8; i++) {
            ret = ret &lt;&lt; 4;
            curr = msk&amp;n;
            ret |= tb[curr];
            n = n &gt;&gt; 4;
        }
        return ret;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 200] Number of Islands ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/05/10/Number-of-Islands/"/>
    <updated>2015-05-10T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/05/10/Number-of-Islands</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/number-of-islands/">link</a></p>

<div class="question-content">
              <p></p><p>Given a 2d grid map of <code>'1'</code>s (land) and <code>'0'</code>s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>

<p><i><b>Example 1:</b></i></p>
<pre>11110<br>11010<br>11000<br>00000</pre>
<p>Answer: 1</p>
<p><i><b>Example 2:</b></i></p>
<pre>11000<br>11000<br>00100<br>00011</pre>
<p>Answer: 3</p>

<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/mithmatt">@mithmatt</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/depth-first-search/">Depth-first Search</a>
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/breadth-first-search/">Breadth-first Search</a>
                  
                </span>
              
            </div>


<h3>Analysis</h3>

<p>At every &lsquo;1&rsquo; position, do DFS.</p>

<h3>Solution</h3>

<p>I post my code below. Note that we do not actually have to have the method &ldquo;findLand&rdquo; &ndash;  we can simply read through the grid and mark all &lsquo;1&rsquo;s in one run.</p>

<p>You might want to come up with your own code. Mine is just for reference. This is not an very interesting question, I assume.</p>

<h3>Code</h3>

<pre><code>public class Solution {
    public int numIslands(char[][] grid) {
        if (grid == null || grid.length == 0 || grid[0].length == 0) {
            return 0;
        }
        int m = grid.length;
        int n = grid[0].length;
        int count = 0;

        Pair firstPiece = findLand(grid, m, n);
        while (firstPiece != null) {
            // mark all neighbors, and count increment
            mark(grid, m, n, firstPiece);
            firstPiece = findLand(grid, m, n);
            count++;
        }

        return count;
    }

    void mark(char[][] grid, int m, int n, Pair p) {
        if (p.x &lt; 0 || p.x == m || p.y &lt; 0 || p.y == n) {
            return;
        } else if (grid[p.x][p.y] != '1') {
            return;
        }
        // mark current and then dfs
        grid[p.x][p.y] = '2';
        mark(grid, m, n, new Pair(p.x - 1, p.y));
        mark(grid, m, n, new Pair(p.x + 1, p.y));
        mark(grid, m, n, new Pair(p.x, p.y - 1));
        mark(grid, m, n, new Pair(p.x, p.y + 1));
    }

    Pair findLand(char[][] grid, int m, int n) {
        for (int i = 0; i &lt; m; i++) {
            for (int j = 0; j &lt; n; j++) {
                if (grid[i][j] == '1') {
                    return new Pair(i, j);
                }
            }
        }
        return null;
    }

    class Pair {
        int x;
        int y;

        public Pair(int a, int b) {
            x = a;
            y = b;
        }
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 191] Number of 1 Bits ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/05/10/Number-of-1-Bits/"/>
    <updated>2015-05-10T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/05/10/Number-of-1-Bits</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/number-of-1-bits/">link</a></p>

<div class="question-content">
              <p></p><p>Write a function that takes an unsigned integer and returns the number of ’1&#8217; bits it has (also known as the <a href="http://en.wikipedia.org/wiki/Hamming_weight">Hamming weight</a>).</p>

<p>For example, the 32-bit integer ’11&#8217; has binary representation <code>00000000000000000000000000001011</code>, so the function should return 3.</p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/bit-manipulation/">Bit Manipulation</a>
                  
                </span>
              
            </div>


<h3>Analysis</h3>

<p>In order to remove the last &lsquo;1&rsquo; bit, we use this operation:</p>

<pre><code>n = n &amp; (n - 1);
</code></pre>

<h3>Solution</h3>

<p>Just remove all the &lsquo;1&rsquo; bits.</p>

<h3>Code</h3>

<pre><code>public class Solution {
    public int hammingWeight(int n) {
        int count = 0;
        while (n != 0) {
            n = n &amp; (n - 1);
            count++;
        }
        return count;
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 198] House Robber ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/05/10/House-Robber/"/>
    <updated>2015-05-10T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/05/10/House-Robber</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/house-robber/">link</a></p>

<div class="question-content">
              <p></p><p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and <b>it will automatically contact the police if two adjacent houses were broken into on the same night</b>.</p>

<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <b>without alerting the police</b>.</p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ifanchu">@ifanchu</a> for adding this problem and creating all test cases. Also thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding additional test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/dynamic-programming/">Dynamic Programming</a>
                  
                </span>
              
</div>


<h3>Solution</h3>

<p>DP question. Be careful what the initial values of dp(1) is. You should work this out without a problem!</p>

<h3>Code</h3>

<pre><code>public class Solution {
    public int rob(int[] num) {
        if (num == null || num.length == 0) {
            return 0;
        } else if (num.length == 1) {
            return num[0];
        }
        int len = num.length;
        int[] dp = new int[len];
        dp[0] = num[0];
        dp[1] = Math.max(num[0], num[1]);
        int max = Math.max(num[0], num[1]);
        for (int i = 2; i &lt; len; i++) {
            dp[i] = Math.max(dp[i - 1], dp[i - 2] + num[i]);
            max = Math.max(max, dp[i]);
        }
        return max;
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 201] Bitwise AND of Numbers Range ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/05/10/Bitwise-AND-of-Numbers-Range/"/>
    <updated>2015-05-10T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/05/10/Bitwise-AND-of-Numbers-Range</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/bitwise-and-of-numbers-range/">link</a></p>

<div class="question-content">
              <p></p><p>Given a range [m, n] where 0 &lt;= m &lt;= n &lt;= 2147483647, return the bitwise AND of all numbers in this range, inclusive.</p>

<p>
For example, given the range [5, 7], you should return 4.
</p>

<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/amrsaqr">@amrsaqr</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/bit-manipulation/">Bit Manipulation</a>
                  
                </span>
              
            </div>


<h3>Analysis</h3>

<p>This is a pretty interesting mathematics question. Now we take 2 numbers as example:</p>

<blockquote><p>Num1: 110010</p>

<p>Num2: 110111</p>

<p>Result: 110000</p></blockquote>

<p>And:</p>

<blockquote><p>Num1: 0110</p>

<p>Num2: 1100</p>

<p>Result: 0</p></blockquote>

<p>Note that:</p>

<ol>
<li><p>if the first &lsquo;1&rsquo; bit of the 2 numbers are at different position, the answer should simply be 0.</p></li>
<li><p>if have same position, then the result would be the continous sequence of 1s, followed by all 0s.</p></li>
</ol>


<h3>Solution</h3>

<p>The 2 best solutions is very well presented by <a href="http://www.cnblogs.com/grandyang/p/4431646.html">Grandyang</a> using bit shifting and masking. Please refer to code 1 and code 2 below.</p>

<p>I found a third solution at <a href="http://www.programcreek.com/2014/04/leetcode-bitwise-and-of-numbers-range-java/">programcreek</a>, which makes use of the fact that m is smaller than n.</p>

<h3>Code</h3>

<p>code 1</p>

<pre><code>class Solution {
public:
    int rangeBitwiseAnd(int m, int n) {
        int d = INT_MAX;
        while ((m &amp; d) != (n &amp; d)) {
            d &lt;&lt;= 1;
        }
        return m &amp; d;
    }
};
</code></pre>

<p>code 2</p>

<pre><code>class Solution {
public:
    int rangeBitwiseAnd(int m, int n) {
        int i = 0;
        while (m != n) {
            m &gt;&gt;= 1;
            n &gt;&gt;= 1;
            ++i;
        }
        return (m &lt;&lt; i);
    }
};
</code></pre>

<p>code 3</p>

<pre><code>public int rangeBitwiseAnd(int m, int n) {
     while (n &gt; m) {
          n = n &amp; n - 1;
     }
     return m &amp; n;
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 199] Binary Tree Right Side View ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/05/10/Binary-Tree-Right-Side-View/"/>
    <updated>2015-05-10T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/05/10/Binary-Tree-Right-Side-View</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/binary-tree-right-side-view/">link</a></p>

<div class="question-content">
              <p></p><p>Given a binary tree, imagine yourself standing on the <i>right</i> side of it, return the values of the nodes you can see ordered from top to bottom.</p>

<p>
For example:<br>
Given the following binary tree,<br>
</p><pre>   1            &lt;---
 /   \
2     3         &lt;---
 \     \
  5     4       &lt;---
</pre>
<p></p>
<p>
You should return <code>[1, 3, 4]</code>.
</p>

<p><b>Credits:</b><br>Special thanks to <a href="https://leetcode.com/discuss/user/amrsaqr">@amrsaqr</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/tree/">Tree</a>
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/depth-first-search/">Depth-first Search</a>
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/breadth-first-search/">Breadth-first Search</a>
                  
                </span>
              
            </div>


<h3>Solution</h3>

<p>This question basically is binary tree traversal. During the process, we keep a list and update the elements in it.</p>

<h3>Code</h3>

<pre><code>/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List&lt;Integer&gt; rightSideView(TreeNode root) {
        List&lt;Integer&gt; result = new ArrayList&lt;Integer&gt;();
        traverse(result, root, 1);
        return result;
    }

    void traverse(List&lt;Integer&gt; result, TreeNode node, int level) {
        if (node == null) return;
        if (level &gt; result.size()) {
            result.add(node.val);
        }
        traverse(result, node.right, level + 1);
        traverse(result, node.left, level + 1);
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 187] Repeated DNA Sequences ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/05/01/Repeated-DNA-Sequences/"/>
    <updated>2015-05-01T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/05/01/Repeated-DNA-Sequences</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/repeated-dna-sequences/">link</a></p>

<div class="question-content">
              <p></p><p>
All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: &#8220;ACGAATTCCG&#8221;. When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.</p>

<p>Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.</p>

<p>
For example,</p>
<pre>Given s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT",

Return:
["AAAAACCCCC", "CCCCCAAAAA"].
</pre><p></p>

                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">

                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/hash-table/">Hash Table</a>

                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/bit-manipulation/">Bit Manipulation</a>

                </span>

            </div>


<h3>Analysis</h3>

<p>This question is straight-forward: just iterate thru all the 10-letter long subsequences, and then add into hashmap.</p>

<p>However, if you simply use String as hash key, it will exceed OJ run time.</p>

<h3>Solution</h3>

<p>Convert string to int is the right approach. To get the best performance, we use 2 bits to represent each DNA nucleotide. Integer is 32-bit long so, no problem with that.</p>

<p>Node that Integer.Max = 2,147,483,647. There&rsquo;s total of 10 digitals, so using 1 digit to represent 1 letter is not feasible.
Ref: <a href="http://www.cnblogs.com/hzhesi/p/4285793.html">BUPT-哲人善思</a></p>

<h3>Code</h3>

<p>The code is pretty difficult to write.</p>

<pre><code>public class Solution {
    public List&lt;String&gt; findRepeatedDnaSequences(String s) {
        List&lt;String&gt; res = new ArrayList&lt;String&gt;();
        if (s == null || s.length() &lt; 10) {
            return res;
        }

        Map&lt;Integer, Integer&gt; map = new HashMap&lt;Integer, Integer&gt;();
        // map&lt;&gt; stores int-to-int: first int is "ACGT" -&gt; 1234
        // second int is the init position of the pattern in s

        int num = 0;
        int mask = 0xFFFFFFFF;
        mask &gt;&gt;&gt;= (32 - 18);

        for (int i = 0; i &lt; s.length(); i++) {
            num = mask &amp; num;
            // get the last 18 binary digits of num

            num = (num &lt;&lt; 2) | convertChatToInt(s.charAt(i));
            // append num with the number representing charAt(i)

            if (i &gt;= 9) {
                // insert or search num in the map
                if (!map.containsKey(num)) {
                    map.put(num, (i - 9));
                    // (i - 9) is the start position of 
                    // the 10-letter-long sequence
                } else if (map.get(num) != -1) {
                    res.add(s.substring(map.get(num), map.get(num) + 10));
                    map.put(num, -1);
                    // after the sequence has been added, mark it in the map
                } else {
                    // do nothing
                }
            }
        }

        return res;
    }

    int convertChatToInt(char ch) {
        if (ch == 'A') {
            return 1;
        } else if (ch == 'C') {
            return 2;
        } else if (ch == 'G') {
            return 3;
        }
        return 0;
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 179] Largest Number ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/04/15/Largest-Number/"/>
    <updated>2015-04-15T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/04/15/Largest-Number</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/largest-number/">link</a></p>

<div class="question-content">
              <p></p><p>Given a list of non negative integers, arrange them such that they form the largest number.</p>

<p>For example, given <code>[3, 30, 34, 5, 9]</code>, the largest formed number is <code>9534330</code>.</p>

<p>Note: The result may be very large, so you need to return a string instead of an integer.</p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p><p></p>

                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">

                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/sort/">Sort</a>

                </span>

            </div>


<h3>Analysis</h3>

<p>Please refer to [[ItInt5] Numbers Concatenation Max (Largest Number)(/blog/2014/08/17/Numbers-Concatenation-Max/).</p>

<h3>Solution</h3>

<p>Note that we <strong>can not override Comparator(Integer)</strong>. So we must first convert int to string then sort.</p>

<h3>Code</h3>

<pre><code>public class Solution {

    // this code should pass
    public String largestNumber(int[] num) {
        if (num == null || num.length == 0) {
            return "0";
        }
        String[] strs = new String[num.length];
        for (int i = 0; i &lt; num.length; i++) {
            strs[i] = String.valueOf(num[i]);
        }
        Arrays.sort(strs, new LargerComparator());

        String res = "";
        for (String str : strs) {
            res = res + str;
        }
        return res;
    }

    class LargerComparator implements Comparator&lt;String&gt; {

        public int compare(String a, String b) {
            String first = a + b;
            String second = b + a;
            return second.compareTo(first);
        }
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 174] Dungeon Game ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/04/15/Dungeon-Game/"/>
    <updated>2015-04-15T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/04/15/Dungeon-Game</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/dungeon-game/">link</a></p>

<div class="question-content">
              <p><style>
table.dungeon, .dungeon th, .dungeon td {
  border:3px solid black;
}

 .dungeon th, .dungeon td {
    text-align: center;
    height: 70px;
    width: 70px;
}
</style>

</p><p>The demons had captured the princess (<b>P</b>) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (<b>K</b>) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess. </p>
<p>The knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately. </p>
<p>Some of the rooms are guarded by demons, so the knight loses health (<i>negative</i> integers) upon entering these rooms;
other rooms are either empty (<i>0&#8217;s</i>) or contain magic orbs that increase the knight&#8217;s health (<i>positive</i> integers).</p>
<p>In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step. </p>

<br>
<p><b>Write a function to determine the knight&#8217;s minimum initial health so that he is able to rescue the princess.</b></p>
<p>For example, given the dungeon below, the initial health of the knight must be at least <b>7</b> if he follows the optimal path <code>RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN</code>.</p>

<table class="dungeon">
<tbody><tr>
<td>-2 (K)</td>
<td>-3</td>
<td>3</td>
</tr>
<tr>
<td>-5</td>
<td>-10</td>
<td>1</td>
</tr>
<tr>
<td>10</td>
<td>30</td>
<td>-5 (P)</td>
</tr>
</tbody></table>
<!---2K   -3  3
-5   -10   1
10 30   5P-->

<br>
<p><b>Notes:</b>
</p><ul>
<li>The knight&#8217;s health has no upper bound.</li>
<li>Any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.  </li>
</ul>
<p></p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/stellari">@stellari</a> for adding this problem and creating all test cases.</p><p></p>

                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">

                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/dynamic-programming/">Dynamic Programming</a>

                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/binary-search/">Binary Search</a>

                </span>

            </div>


<h3>Analysis</h3>

<p>The key of solving this problem is to <strong>do DP from bottom right to top left</strong>.</p>

<h3>Solution</h3>

<p>dp[i][j] means the minimum initial value of each position. As suggested by<a href="http://www.cnblogs.com/grandyang/p/4233035.html"></a>, the DP equation is:</p>

<blockquote><p>dp[i][j] = max(1, min(dp[i+1][j], dp[i][j+1]) &ndash; dungeon[i][j]).</p></blockquote>

<h3>Code</h3>

<pre><code>public class Solution {
    public int calculateMinimumHP(int[][] dungeon) {
        if (dungeon == null) return 1;
        int m = dungeon.length;
        int n = dungeon[0].length;

        int[][] dp = new int[m][n];
        for (int i = m - 1; i &gt;= 0; i--) {
            for (int j = n - 1; j &gt;= 0; j--) {
                if (i == m - 1 &amp;&amp; j == n - 1) {
                    dp[i][j] = Math.max(1, 1 - dungeon[i][j]);
                } else if (i == m - 1) {
                    dp[i][j] = Math.max(1, dp[i][j + 1] - dungeon[i][j]);
                } else if (j == n - 1) {
                    dp[i][j] = Math.max(1, dp[i + 1][j] - dungeon[i][j]);
                } else {
                    dp[i][j] = Math.max(1,
                        Math.min(dp[i + 1][j], dp[i][j + 1]) - dungeon[i][j]);
                }
            }
        }
        return dp[0][0];
    }
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 173] Binary Search Tree Iterator ]]></title>
    <link href="http://www.shuatiblog.com/blog/2015/04/15/Binary-Search-Tree-Iterator/"/>
    <updated>2015-04-15T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2015/04/15/Binary-Search-Tree-Iterator</id>
    <content type="html"><![CDATA[<h3>Question</h3>

<p><a href="https://leetcode.com/problems/binary-search-tree-iterator/">link</a></p>

<div class="question-content">
              <p></p><p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.</p>

<p>Calling <code>next()</code> will return the next smallest number in the BST.</p>

<p><b>Note: </b><code>next()</code> and <code>hasNext()</code> should run in average O(1) time and uses O(<i>h</i>) memory, where <i>h</i> is the height of the tree. </p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/tree/">Tree</a>
                  
                  <a class="btn btn-xs btn-primary" href="http://www.shuatiblog.com/tag/stack/">Stack</a>
                  
                </span>
              
            </div>


<h3>Analysis</h3>

<p>This is an extremely important question, if you are going for an interview. I repeat: <strong>this is an extremely important question, if you are going for an interview</strong>. If you do not remember it by heart, I will repeat again.</p>

<p>The solution of the iterator applies to a lot of related questions. So make sure you practise this question until you are perfect. You WILL BE ASKED this question at times.</p>

<p>You could read my other post <a href="http://www.shuatiblog.com/blog/2014/06/14/Iterator-of-Tree/">[Question] Iterator of Binary Search Tree</a>.</p>

<h3>Solution</h3>

<p>We only need to keep 1 variable in RAM, that is a stack.</p>

<h3>Code</h3>

<pre><code>public class BSTIterator {

    Stack&lt;TreeNode&gt; stack = new Stack&lt;TreeNode&gt;();

    public BSTIterator(TreeNode root) {
        while (root != null) {
            stack.push(root);
            root = root.left;
        }
    }

    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return !stack.isEmpty();
    }

    /** @return the next smallest number */
    public int next() {
        if (!hasNext()) {
            return 0;
        }
        TreeNode next = stack.pop();
        TreeNode node = next.right;
        while (node != null) {
            stack.push(node);
            node = node.left;
        }
        return next.val;
    }
}
</code></pre>
]]></content>
  </entry>
  
</feed>
