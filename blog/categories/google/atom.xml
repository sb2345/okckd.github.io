<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Google | My Octopress Blog]]></title>
  <link href="http://okckd.github.io/blog/categories/google/atom.xml" rel="self"/>
  <link href="http://okckd.github.io/"/>
  <updated>2014-08-08T18:29:11+08:00</updated>
  <id>http://okckd.github.io/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Google] Postorder Successor in Binary Tree]]></title>
    <link href="http://okckd.github.io/blog/2014/08/06/Postorder-successor-Binary-Tree/"/>
    <updated>2014-08-06T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/06/Postorder-successor-Binary-Tree</id>
    <content type="html"><![CDATA[### Question 

[link](http://www.careercup.com/question?id=5173972006076416)

> Write an algorithm to find the ‘next’ post-order successor of a given node in a binary tree and binary search tree.

> 1. where each node has a link to its parent. 
> 1. without parent pointer 

> Implement 2 versions of the algorithm: 1.) binary tree 2.) BST

### Solution

In postorder, any node below current node shall be 'predecessor' of current node. Thus we only care about current node's parent. 

Suggested by a user: 

    1) parent pointer is given. 
    - go to the parent of the current node. 
    - if current node is the right child of its parent => print parent. 
    - else return leftmost node of the right sub-tree of parent. 

    2) parent pointer is not given. 
    - traverse the tree and find the parent of the current node 
    - do the same as method (1). 
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Connect Nodes and Avoid Intersect]]></title>
    <link href="http://okckd.github.io/blog/2014/08/06/Connect-nodes-avoid-intersect/"/>
    <updated>2014-08-06T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/06/Connect-nodes-avoid-intersect</id>
    <content type="html"><![CDATA[### Question 

[link](http://www.careercup.com/question?id=5138832865361920)

> Draw a graph as a graph. Assume there is graphics library to draw lines and all. Just tell how will you order the vertices such that the edges don't intersect and they seem ordered. 

### Solution

There's no clear solution. Someone suggest the following: 

1. printing topological sort result (refer to post 'Topology Sort')
2. edges should not intersect, finding if a graph is planar

There's various [Planarity Testing Algorithms](http://en.wikipedia.org/wiki/Planarity_testing). 
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Ambiguous File Matching]]></title>
    <link href="http://okckd.github.io/blog/2014/08/06/Ambiguous-File-Matching/"/>
    <updated>2014-08-06T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/06/Ambiguous-File-Matching</id>
    <content type="html"><![CDATA[### Question 

[link](http://www.careercup.com/question?id=5678301561487360)

> Given 10 files (text files) each of size of 900 Mb. 

> Given another file named "hello". match the contents of this file with other 10 file and return the file whose contents closely match with the contents of file "hello". 

### Solution

The solution given on the site is not adequate, but I have to choose one that make a little sense. 

> Score each file's contents on several parameters: 
> 
> 1. no. of words 
> 2. no. of letters 
> 3. no. of spaces 
> 4. count of each of the letters 
> 5. count of each words 

> Give weightage to each of the properties and arrive at a number (score). The closest of the scores is the answer.

I think maybe can use [Counting Bloom Filter](http://en.wikipedia.org/wiki/Bloom_filter#Counting_filters), although bloom filter does not record word sequences. 
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Write a Random Number Generator]]></title>
    <link href="http://okckd.github.io/blog/2014/08/05/Write-a-RNG/"/>
    <updated>2014-08-05T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/05/Write-a-RNG</id>
    <content type="html"><![CDATA[### Question 

[link](http://www.careercup.com/question?id=5173972006076416)

### Solution

Basically, the formula is as follows:

> number = (previous_number * constant + other_constant) mod third_constant

The three constants are carefully selected, and a typical choice is:

> number = (previous_number * 214013 + 2531011) mod 2^15
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Google] Replace Question Mark With Number]]></title>
    <link href="http://okckd.github.io/blog/2014/08/05/Replace-Question-Mark-WIth-Number/"/>
    <updated>2014-08-05T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/08/05/Replace-Question-Mark-WIth-Number</id>
    <content type="html"><![CDATA[### Question 

[link](http://www.careercup.com/question?id=5192571630387200)

> Given a string (for example: "a?bc?def?g"), write a program to generate all the possible strings by replacing ? with 0 and 1. 

> Input : a?b?c? 
>
> Output: a0b0c0, a0b0c1, a0b1c0, a0b1c1, a1b0c0, a1b0c1, a1b1c0, a1b1c1.

### Solution

DFS search, but do not forget to set "__letters[pos] = '?';__" at the end. I made this error once. 

### Code

	public List<String> solution(String str) {
		List<String> result = new ArrayList<String>();
		helper(result, str.toCharArray(), 0);
		return result;
	}

	private void helper(List<String> result, char[] letters, int pos) {
		if (pos == letters.length) {
			result.add(String.valueOf(letters));
			return;
		} else if (letters[pos] != '?') {
			helper(result, letters, pos + 1);
			return;
		}
		for (char i = '0'; i <= '1'; i++) {
			// put char i in letters[] to replace the '?'
			letters[pos] = i;
			helper(result, letters, pos + 1);
			letters[pos] = '?';
		}
	}
]]></content>
  </entry>
  
</feed>
