<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: leetcode | Shuatiblog.com]]></title>
  <link href="www.shuatiblog.com/blog/categories/leetcode/atom.xml" rel="self"/>
  <link href="www.shuatiblog.com/"/>
  <updated>2015-04-15T18:00:56+08:00</updated>
  <id>www.shuatiblog.com/</id>
  <author>
    <name><![CDATA[CodeMonkey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[LeetCode 179] Largest Number ]]></title>
    <link href="www.shuatiblog.com/blog/2015/04/15/Largest-Number/"/>
    <updated>2015-04-15T00:00:00+08:00</updated>
    <id>www.shuatiblog.com/blog/2015/04/15/Largest-Number</id>
    <content type="html"><![CDATA[### Question

[link](https://leetcode.com/problems/largest-number/)

<div class="question-content">
              <p></p><p>Given a list of non negative integers, arrange them such that they form the largest number.</p>

<p>For example, given <code>[3, 30, 34, 5, 9]</code>, the largest formed number is <code>9534330</code>.</p>

<p>Note: The result may be very large, so you need to return a string instead of an integer.</p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p><p></p>

                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">

                  <a class="btn btn-xs btn-primary" href="www.shuatiblog.com/tag/sort/">Sort</a>

                </span>

            </div>

### Analysis

Please refer to [[ItInt5] Numbers Concatenation Max (Largest Number)(/blog/2014/08/17/Numbers-Concatenation-Max/).

### Solution

Note that we __can not override Comparator(Integer)__. So we must first convert int to string then sort.

### Code

    public class Solution {

        // this code should pass
        public String largestNumber(int[] num) {
            if (num == null || num.length == 0) {
                return "0";
            }
            String[] strs = new String[num.length];
            for (int i = 0; i < num.length; i++) {
                strs[i] = String.valueOf(num[i]);
            }
            Arrays.sort(strs, new LargerComparator());

            String res = "";
            for (String str : strs) {
                res = res + str;
            }
            return res;
        }

        class LargerComparator implements Comparator<String> {

            public int compare(String a, String b) {
                String first = a + b;
                String second = b + a;
                return second.compareTo(first);
            }
        }
    }
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 174] Dungeon Game ]]></title>
    <link href="www.shuatiblog.com/blog/2015/04/15/Dungeon-Game/"/>
    <updated>2015-04-15T00:00:00+08:00</updated>
    <id>www.shuatiblog.com/blog/2015/04/15/Dungeon-Game</id>
    <content type="html"><![CDATA[### Question 

[link](https://leetcode.com/problems/dungeon-game/)

<div class="question-content">
              <p><style>
table.dungeon, .dungeon th, .dungeon td {
  border:3px solid black;
}

 .dungeon th, .dungeon td {
    text-align: center;
    height: 70px;
    width: 70px;
}
</style>

</p><p>The demons had captured the princess (<b>P</b>) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (<b>K</b>) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess. </p>
<p>The knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately. </p>
<p>Some of the rooms are guarded by demons, so the knight loses health (<i>negative</i> integers) upon entering these rooms; 
other rooms are either empty (<i>0's</i>) or contain magic orbs that increase the knight's health (<i>positive</i> integers).</p>
<p>In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step. </p>

<br>
<p><b>Write a function to determine the knight's minimum initial health so that he is able to rescue the princess.</b></p>
<p>For example, given the dungeon below, the initial health of the knight must be at least <b>7</b> if he follows the optimal path <code>RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN</code>.</p>

<table class="dungeon">
<tbody><tr> 
<td>-2 (K)</td> 
<td>-3</td> 
<td>3</td> 
</tr> 
<tr> 
<td>-5</td> 
<td>-10</td> 
<td>1</td> 
</tr> 
<tr> 
<td>10</td> 
<td>30</td> 
<td>-5 (P)</td> 
</tr> 
</tbody></table>
<!---2K   -3  3
-5   -10   1
10 30   5P-->

<br>
<p><b>Notes:</b>
</p><ul>
<li>The knight's health has no upper bound.</li>
<li>Any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.  </li>
</ul>
<p></p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/stellari">@stellari</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="www.shuatiblog.com/tag/dynamic-programming/">Dynamic Programming</a>
                  
                  <a class="btn btn-xs btn-primary" href="www.shuatiblog.com/tag/binary-search/">Binary Search</a>
                  
                </span>
              
            </div>

### Analysis



### Solution



### Code



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 173] Binary Search Tree Iterator ]]></title>
    <link href="www.shuatiblog.com/blog/2015/04/15/Binary-Search-Tree-Iterator/"/>
    <updated>2015-04-15T00:00:00+08:00</updated>
    <id>www.shuatiblog.com/blog/2015/04/15/Binary-Search-Tree-Iterator</id>
    <content type="html"><![CDATA[### Question 

[link](https://leetcode.com/problems/binary-search-tree-iterator/)

<div class="question-content">
              <p></p><p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.</p>

<p>Calling <code>next()</code> will return the next smallest number in the BST.</p>

<p><b>Note: </b><code>next()</code> and <code>hasNext()</code> should run in average O(1) time and uses O(<i>h</i>) memory, where <i>h</i> is the height of the tree. </p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="www.shuatiblog.com/tag/tree/">Tree</a>
                  
                  <a class="btn btn-xs btn-primary" href="www.shuatiblog.com/tag/stack/">Stack</a>
                  
                </span>
              
            </div>

### Analysis

This is an extremely important question, if you are going for an interview. I repeat: __this is an extremely important question, if you are going for an interview__. If you do not remember it by heart, I will repeat again. 

The solution of the iterator applies to a lot of related questions. So make sure you practise this question until you are perfect. You WILL BE ASKED this question at times. 

You could read my other post [[Question] Iterator of Binary Search Tree](/blog/2014/06/14/Iterator-of-Tree/). 

### Solution

We only need to keep 1 variable in RAM, that is a stack. 

### Code

    public class BSTIterator {

        Stack<TreeNode> stack = new Stack<TreeNode>();

        public BSTIterator(TreeNode root) {
            while (root != null) {
                stack.push(root);
                root = root.left;
            }
        }

        /** @return whether we have a next smallest number */
        public boolean hasNext() {
            return !stack.isEmpty();
        }

        /** @return the next smallest number */
        public int next() {
            if (!hasNext()) {
                return 0;
            }
            TreeNode next = stack.pop();
            TreeNode node = next.right;
            while (node != null) {
                stack.push(node);
                node = node.left;
            }
            return next.val;
        }
    }
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 169] Majority Element ]]></title>
    <link href="www.shuatiblog.com/blog/2015/04/14/Majority-Element/"/>
    <updated>2015-04-14T00:00:00+08:00</updated>
    <id>www.shuatiblog.com/blog/2015/04/14/Majority-Element</id>
    <content type="html"><![CDATA[### Question 

[link](https://leetcode.com/problems/majority-element/)

### Solution

<div class="question-content">
              <p></p><p>Given an array of size <i>n</i>, find the majority element. The majority element is the element that appears more than <code>? n/2 ?</code> times.</p>

<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ts">@ts</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="www.shuatiblog.com/tag/divide-and-conquer/">Divide and Conquer</a>
                  
                  <a class="btn btn-xs btn-primary" href="www.shuatiblog.com/tag/array/">Array</a>
                  
                  <a class="btn btn-xs btn-primary" href="www.shuatiblog.com/tag/bit-manipulation/">Bit Manipulation</a>
                  
                </span>
              
            </div>

### Analysis

I have already covered this question in [[LintCode] Majority Number](/blog/2014/06/28/Majority-Number/). However, I have also discovered __a few other very interesting solution__. Check below. 

### Solution

The best solution is of course the voting algorithm. Read code below. 

Second solution presented by offical answer, is to do sorting: 

    public int majorityElement(int[] num) {
        if (num.length == 1) {
            return num[0];
        }

        Arrays.sort(num);
        return num[num.length / 2];
    }

Third interesting solution is doing bit manipulation. Read [Yanyulin's blog](http://www.yanyulin.info/pages/2014/12/851338983752.html) for more. 

### Code

    public class Solution {
        public int majorityElement(int[] num) {
            if (num == null || num.length == 0) {
                return 0;
            }
            int major = num[0];
            long count = 1;

            for (int i = 1; i < num.length; i++) {
                if (major == num[i]) {
                    count++;
                } else if (count == 0) {
                    major = num[i];
                    count = 1;
                } else {
                    count--;
                }
            }

            return major;
        }
    }
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[LeetCode 168] Excel Sheet Column Title ]]></title>
    <link href="www.shuatiblog.com/blog/2015/04/14/Excel-Sheet-Column-Title/"/>
    <updated>2015-04-14T00:00:00+08:00</updated>
    <id>www.shuatiblog.com/blog/2015/04/14/Excel-Sheet-Column-Title</id>
    <content type="html"><![CDATA[### Question 

[link](https://leetcode.com/problems/excel-sheet-column-title/)

<div class="question-content">
              <pExcel Sheet Column Number></p><p>Given a positive integer, return its corresponding column title as appear in an Excel sheet.</p>

<p>For example:</p>
<pre>    1 -&gt; A
    2 -&gt; B
    3 -&gt; C
    ...
    26 -&gt; Z
    27 -&gt; AA
    28 -&gt; AB </pre>

<p><b>Credits:</b><br>Special thanks to <a href="https://oj.leetcode.com/discuss/user/ifanchu">@ifanchu</a> for adding this problem and creating all test cases.</p><p></p>
              
                <div id="tags" class="btn btn-xs btn-warning">Show Tags</div>
                <span class="hide">
                  
                  <a class="btn btn-xs btn-primary" href="www.shuatiblog.com/tag/math/">Math</a>
                  
                </span>
              
            </div>

### Analysis

This is pretty much a similar question. It's pretty easy. 

### Code

    public class Solution {
        public int titleToNumber(String s) {
            if (s == null || s.length() == 0) {
                return 0;
            }
            int sum = 0;
            for (char ch: s.toCharArray()) {
                sum *= 26;
                sum += (int) (ch - 'A' + 1);
            }
            return sum;
        }
    }

]]></content>
  </entry>
  
</feed>
