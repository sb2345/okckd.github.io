<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Experience | Woodstock Blog]]></title>
  <link href="http://okckd.github.io/blog/categories/experience/atom.xml" rel="self"/>
  <link href="http://okckd.github.io/"/>
  <updated>2014-12-22T13:10:07+08:00</updated>
  <id>http://okckd.github.io/</id>
  <author>
    <name><![CDATA[Charlie Brown]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[Ruby]]]></title>
    <link href="http://okckd.github.io/blog/2014/12/22/RubyGems-gem-other-terms/"/>
    <updated>2014-12-22T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/12/22/RubyGems-gem-other-terms</id>
    <content type="html"><![CDATA[Sometme I found the different concepts in Ruby very confusing for beginners. That's why I write this post to clarify some terminologies. 

### RubyGems 

__[RubyGems](http://en.wikipedia.org/wiki/RubyGems)__ is a package manager for the Ruby programming language. 

It is a tool to manage the installation of gems, and a server for distributing them. 

RubyGems is very similar to apt-get, portage, and yum in functionality.

### 'gem' command

'gem' command allows you to interact with RubyGems. It is used build, upload, download, and install Gem packages. 

Installation:

    gem install mygem

Uninstallation:

    gem uninstall mygem

Listing installed gems:

    gem list --local

Listing available gems, e.g.:

    gem list --remote

### gem

[ref1](http://stackoverflow.com/questions/5233924/what-is-a-ruby-gem)

[ref2](http://guides.rubygems.org/what-is-a-gem/)

A gem is a module/Library that you can install and use in every project on your server. 

Each gem has a __name, version, and platform__. For example, rake gem has a 10.3.2 version on platform Ruby.

Inside a gems are the following components: 

1. Code (including tests and supporting utilities)
1. Documentation
1. gemspec

Standard code structure:

    % tree freewill
    freewill/
    ├── bin/
    │   └── freewill
    ├── lib/
    │   └── freewill.rb
    ├── test/
    │   └── test_freewill.rb
    ├── README
    ├── Rakefile
    └── freewill.gemspec

### Bundler

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Octopress] Clone Octopress Blog From a Different Computer]]></title>
    <link href="http://okckd.github.io/blog/2014/07/21/Clone-octopress-blog-from-a-different-computer/"/>
    <updated>2014-07-21T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/07/21/Clone-octopress-blog-from-a-different-computer</id>
    <content type="html"><![CDATA[### Before we start

Well first of all, we must have Ruby, DevKit, gem, bundler and dependencies installed. Simply follow [this tutorial](http://www.techelex.org/setup-octopress-on-windows7/). 

Remember to set the __Ruby directory__ (C:\Ruby193\bin) in the __System Variable Settings__. 

### Now, start

I've had a little confusions about how to develop my Octopress blog on 2 different computers. Some solutions posted online does not work, and it turns out that some commands have changed its functions in new version of Octopress. So, I write this post to clarify these confusions. 

To set up a new local repository from an online github octopress blog repo, follow the instructions: 

1. __clone the source branch to the local octopress folder__

> git clone -b source git@github.com:okckd/okckd.github.io.git octopress

1. __run the rake installation to configure everything__

> cd octopress
>
> gem install bundler
>
> rbenv rehash    (I think this is optional)
>
> bundle install
>
> rake setup_github_pages

1. __enter repository URL__

> git@github.com:willran168/willran168.github.io.git

1. __clone the master branch to the _deploy subfolder__

> git clone git@github.com:willran168/willran168.github.io.git _deploy 

Clone master branch is the last step. Because running `rake setup_github_pages` will remove previous _deploy folder and init a new repo inside of it. So master have to be cloned after this step. 

It's done. Now we can do 'rake gen_deploy', or 'git commit or push origin source'. 

[reference](http://blog.zerosharp.com/clone-your-octopress-to-blog-from-two-places/)
]]></content>
  </entry>
  
</feed>
