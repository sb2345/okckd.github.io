<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: testing | Shuatiblog.com]]></title>
  <link href="http://www.shuatiblog.com/blog/categories/testing/atom.xml" rel="self"/>
  <link href="http://www.shuatiblog.com/"/>
  <updated>2015-08-28T12:36:41+08:00</updated>
  <id>http://www.shuatiblog.com/</id>
  <author>
    <name><![CDATA[CodeMonkey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[CC150v5] 12.0 Example - Troubleshoot Google Chrome ]]></title>
    <link href="http://www.shuatiblog.com/blog/2014/09/24/troubleshoot-google-chrome/"/>
    <updated>2014-09-24T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2014/09/24/troubleshoot-google-chrome</id>
    <content type="html"><![CDATA[### Question

> You'reworking on the Google Chrome team when you receivea bug report: Chrome crashes on launch. What would you do? 

### Step 1: Understand the Scenario

1. How long has user seen this issue?
1. version of browser and OS?
1. Does this happen consistently? How often, and when?

### Step 2: Break Down the Problem

Flow of situation:

1. start menu
1. click chrome
1. browser starts
1. browser load settings
1. browser issues HTTP response
1. browser get HTTP response
1. browser parses webpage
1. browser displays content

__At some points in this process, something fails__. A good tester would iterate thru the elements of this scenario and diagnose the problem. 

### Step 3: Create Specific, Manageable Tests

Come up with realistic instructions. 
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CC150v4] 11.2 Random error debugging 2 ]]></title>
    <link href="http://www.shuatiblog.com/blog/2014/09/08/random-error-debugging-2/"/>
    <updated>2014-09-08T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2014/09/08/random-error-debugging-2</id>
    <content type="html"><![CDATA[### Question

> You are given the source to an application which crashes when it is run After running it ten times in a debugger, you find it never crashes in the same place The application is single threaded, and uses only the C standard library What programming errors could be causing this crash? How would you test each one? 

### Solution

The solution is from __both CC150v4 and CC150v5__. My previous post __[Testing] Random error debugging 1__ already covered this question. 

Again, the answer is very similar: 

1. Depends on random variable
	1. RNG
	1. depends on user input
	1. depends on system date/time
1. Uninitialized variable
    1. can take on arbitrary value
    1. can execute in different path
1. Memory Leak
	1. out of RAM
	1. heap overflow
	1. stack data corruption
1. System Dependency
	1. depends on external module
	1. depends on some system attributed that's being modified by another application (this is especially for hardware-facing applications)

In general, __Web server is more prone to Memory Leak__, and program that runs __close to system level__ is more prone to system dependency errors. 

Additionally, we may be able to use tools to check for specific situations. For example, to investigate issue #2, we can __utilize runtime tools which check for uninitialized variables__. 
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Testing] Test hashCode() function]]></title>
    <link href="http://www.shuatiblog.com/blog/2014/08/26/Test-hashcode-function/"/>
    <updated>2014-08-26T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2014/08/26/Test-hashcode-function</id>
    <content type="html"><![CDATA[### Question

> How to test hashCode() function? Example: 

	public int hashCode(){
		int result = 17 + hashDouble(re);
		result = 31 * result + hashDouble(im);
		return result;
	}

### Solution

We need to test that the hash function is [reflexive, symmetric, and transitive](http://stackoverflow.com/a/4449791). 

### Code

Not including 'not equal' test. 

	@Test
	public void testEquals_Symmetric() {
		Person x = new Person("Foo Bar");  // equals and hashCode check name field value
		Person y = new Person("Foo Bar");
		Assert.assertTrue(x.equals(y) && y.equals(x));
		Assert.assertTrue(x.hashCode() == y.hashCode());
	}
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Testing] Test Command Line Copy]]></title>
    <link href="http://www.shuatiblog.com/blog/2014/08/09/Test-command-line-copy/"/>
    <updated>2014-08-09T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2014/08/09/Test-command-line-copy</id>
    <content type="html"><![CDATA[### Question 

[link](http://stackoverflow.com/questions/6591652/how-do-i-test-the-copy-command-in-the-windows-environment)

> testing the copy command in windows environment 

### Solution

[The most important point](http://stackoverflow.com/a/6591999) is to __come up with different domains of inputs and scenarios__. 

### Copying between:

1. network share
1. A really slow network share across the Internet
1. partitions
1. disks
1. disks of different types (flash, usb, external sata, SSD, etc...)
1. directories
1. within the same directory

### Naming

1. Normal file name
1. Filename that exceeds 8.3 (verylongfilename.whatever)
1. Copying a very long file name, but referencing it by it's 8.3 name (copy verylo~1.wha d:\)
1. A full directory path that exeeds MAX_PATH (260) characters (e.g. c:\a\very\long\directory\name\that\goes\on\forever\in\length......foo.txt)
1. By absolute addressing (\\?\\c:\foo\foo.txt)
1. wildcards (e.g. *.* *.txt foo?.txt )
1. A filename with unicode characters
1. A filename with illegal characters in it (there are creative ways to get these files on disk)

### Attributes

1. Testing with different file attributes (read-only, hidden, system, archive, etc...)
1. Validate timestamp is preserved across copies
1. Validate timestamp is preserved across network file share copies when the destination machine is in another timezone
1. NTFS ACLs are preserved

### Addressing types

1. reference by absolute path (e.g. copy c:\some\directory\foo.txt c:\other\place\foo.txt)
1. reference by relative path (e.g. copy ..\..\documents\whatever\foo.txt subdirectory/foo.txt)
1. By absolute drive letter into current working directoroy of destination (with no path (e.g. copy foo.txt d:)
1. Network share mounted to a drive letter

### Failure cases, edge cases, and hack attacks

1. Try to copy a file onto itself (e.g copy c:\foo.txt c:\foo.txt)
1. Copy when the network share is down.
1. Unplug the network cable in the middle of a network file copy
1. copy to a read only directory
1. copy when the source file is locked.
1. copy the when destination file exists but the destination file exists and is read only
1. Detach the external disk right before the file copy starts
1. disk is near full (But would be full before the entire copy finishes)
1. disk is full
1. Unplug the power cable in the middle of the copy!
1. During a very long copy, start another copy with the same source file, but to another destination
1. During a very long copy, start another copy with a different source file, but the the same destination
1. During a very long copy, start another copy with the same source and destination files!

### File types

1. ascii file
1. unicode file
1. binary file

### Environments

1. RAID configurations
1. FAT and NTFS
1. Windows XP, Vista, 7, Server 2003, etc... (you can quantify this by asking the requirement of "which OS" up front)
1. Virtual Machine (VMWare, virtual PC, hypervisor, etc...)
1. Intel and AMD
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Testing] Random error debugging 1 ]]></title>
    <link href="http://www.shuatiblog.com/blog/2014/08/07/Random-error-debugging-1/"/>
    <updated>2014-08-07T00:00:00+08:00</updated>
    <id>http://www.shuatiblog.com/blog/2014/08/07/Random-error-debugging-1</id>
    <content type="html"><![CDATA[### Question 

[link](http://stackoverflow.com/questions/4531742/debugging-a-program-that-crashes-10-times-in-different-places)

> You are given the source to an application which is crashing during run time. After running it 10 times in a debugger, you find it never crashes in the same place. 

> What programming errors could be causing this crash? How would you test each one?

### Analysis

1. code depends on __system time or RNG__

1. disk full, i.e. other processes may delete a different file causing more space to be available

1. memory issue, i.e. other processes allocate and/or free memory

1. a pointer points to a random location in memory that is changed by another process causing some values be "valid" (very rare though)

[In general](http://stackoverflow.com/a/4531769) a situation __with other process__ is likely.
]]></content>
  </entry>
  
</feed>
