<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Cc150v4 | Woodstock Blog]]></title>
  <link href="http://okckd.github.io/blog/categories/cc150v4/atom.xml" rel="self"/>
  <link href="http://okckd.github.io/"/>
  <updated>2014-09-08T01:53:11+08:00</updated>
  <id>http://okckd.github.io/</id>
  <author>
    <name><![CDATA[Charlie Brown]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[CC150v4] 11.4 Test Webpage Without Tools (`)]]></title>
    <link href="http://okckd.github.io/blog/2014/09/08/test-webpage-without-tool/"/>
    <updated>2014-09-08T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/09/08/test-webpage-without-tool</id>
    <content type="html"><![CDATA[### Question

> How would you load test a webpage without using any test tools?

### Solution


]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CC150v4] 11.2 Random Error Debugging 2]]></title>
    <link href="http://okckd.github.io/blog/2014/09/08/random-error-debugging-2/"/>
    <updated>2014-09-08T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/09/08/random-error-debugging-2</id>
    <content type="html"><![CDATA[### Question

> You are given the source to an application which crashes when it is run After running it ten times in a debugger, you find it never crashes in the same place The application is single threaded, and uses only the C standard library What programming errors could be causing this crash? How would you test each one? 

### Solution

This question is from CC150v4, but my previous post __[Testing] Random error debugging 1__ already covered this question. 

Again, the answer is very similar: 

1. Depends on random variable
	1. RNG
	1. depends on user input
	1. depends on system date/time
1. Memory Leak
	1. out of RAM
	1. heap overflow
	1. stack data corruption
1. System Dependency
	1. depends on external module
	1. depends on some system attributed that's being modified by another application (this is especially for hardware-facing applications)

In general, __Web server is more prone to Memory Leak__, and program that runs __close to system level__ is more prone to system dependency errors. 
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CC150v4] 10.4 Implement Mathematical Operators]]></title>
    <link href="http://okckd.github.io/blog/2014/09/08/implement-math-operators/"/>
    <updated>2014-09-08T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/09/08/implement-math-operators</id>
    <content type="html"><![CDATA[### Question

> Write a method to implement *, - , / operations You should use only the + operator. 

### Solution

__First it's important to write a 'negate' operator__. This is used in all other operations. 

	public static int FnNegate(int a) {
		int neg = 0;
		int d = a < 0 ? 1 : -1;
		while (a != 0) {
			neg += d;
			a += d;
		}
		return neg;
	}

Although we can only use +, the author also used > and < comparison operators. 

This is a borning question, I did not write code myself. 

### Code

__not written by me__

	/* Flip a positive sign to negative, or a negative sign to pos */
	public static int FnNegate(int a) {
		int neg = 0;
		int d = a < 0 ? 1 : -1;
		while (a != 0) {
			neg += d;
			a += d;
		}
		return neg;
	}

	/* Subtract two numbers by negating b and adding them */
	public static int FnMinus(int a, int b) {
		return a + FnNegate(b);
	}

	/* Check if a and b are different signs */
	public static boolean DifferentSigns(int a, int b) {
		return ((a < 0 && b > 0) || (a > 0 && b < 0)) ? true : false;
	}

	/* Return absolute value */
	public static int abs(int a) {
		if (a < 0)
			return FnNegate(a);
		else
			return a;
	}

	/* Multiply a by b by adding a to itself b times */
	public static int FnTimes(int a, int b) {
		if (a < b)
			return FnTimes(b, a); // algo is faster if b < a
		int sum = 0;
		for (int iter = abs(b); iter > 0; --iter)
			sum += a;
		if (b < 0)
			sum = FnNegate(sum);
		return sum;
	}

	// returns 1, if a/b >= 0.5, and 0 otherwise
	public static int DefineAndRoundFraction(int a, int b) {
		if (FnTimes(abs(a), 2) >= abs(b))
			return 1;
		else
			return 0;
	}

	/*
	 * Divide a by b by literally counting how many times does b go into a. That
	 * is, count how many times you can subtract b from a until you hit 0.
	 */
	public static int FnDivide(int a, int b)
			throws java.lang.ArithmeticException {
		if (b == 0) {
			throw new java.lang.ArithmeticException("ERROR: Divide by zero.");
		}
		int quotient = 0;
		int divisor = FnNegate(abs(b));
		int divend; /* dividend */
		for (divend = abs(a); divend >= abs(divisor); divend += divisor) {
			++quotient;
		}
		if (DifferentSigns(a, b))
			quotient = FnNegate(quotient);
		return quotient;
	}
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CC150v4] 10.6 Find Collinear in 2D Plane (`)]]></title>
    <link href="http://okckd.github.io/blog/2014/09/08/find-coliner-in-2d-plane/"/>
    <updated>2014-09-08T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/09/08/find-coliner-in-2d-plane</id>
    <content type="html"><![CDATA[### Question

> Given a two dimensional graph with points on it, find a line which passes the most number of points. 

### Solution



### Code


]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[CC150v4] Chap9 Example - Sort Persons]]></title>
    <link href="http://okckd.github.io/blog/2014/09/07/sort-persons/"/>
    <updated>2014-09-07T00:00:00+08:00</updated>
    <id>http://okckd.github.io/blog/2014/09/07/sort-persons</id>
    <content type="html"><![CDATA[### Question

> You have a very large array of ‘Person’ objects. Sort the people in increasing order of age. 

### Solution

First we look at the nature of this question: 

1. large input array
1. sort based on age (__which is between 1 and 100__, this is important)

__This exactly matches the charasteristics of Bucket Sort__. Time complexity in average case is O(n + k) where k is the number of buckets. ]]></content>
  </entry>
  
</feed>
